{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/fatdumplingg/CountryUrgencyLevel-KMeansClustering/blob/main/CountryUrgencyLevelGrouping_UnsupervisedLearning.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VyLXFDh_arjz"
      },
      "source": [
        "# **COUNTRY URGENCY LEVEL CLUSTERING**\n",
        "\n",
        "> Goal : to group all world countries into a categories based on the level of assistance they may (or may not) require from other countries.\n",
        "\n",
        "> Dataset credit : https://www.kaggle.com/datasets/rohan0301/unsupervised-learning-on-country-data\n",
        "\n",
        "> Clustering will use evaluations of each country's measured values in 9 fields : child mortality, exports, health, imports, income, inflation, life-expentancy, total-fertility, and gdp-per-capita.\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###PART 1 : DATA ACQUISITION"
      ],
      "metadata": {
        "id": "vrQx_6eOXZhj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Importing Libraries"
      ],
      "metadata": {
        "id": "rkP66cvJ3lWb"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P2716vvkrd0O",
        "outputId": "84f16889-b2d7-437f-9a72-ec3323f6bc09"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: kaleido in /usr/local/lib/python3.10/dist-packages (0.2.1)\n"
          ]
        }
      ],
      "source": [
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "#importing libraries\n",
        "import pandas as pd\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "import seaborn as sns\n",
        "pd.options.display.float_format = '{:.2f}'.format\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.metrics import silhouette_score\n",
        "from mpl_toolkits.mplot3d import Axes3D\n",
        "\n",
        "import plotly.express as px\n",
        "!pip install -U kaleido\n",
        "import kaleido"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Loading Dataset"
      ],
      "metadata": {
        "id": "5Iu1ODQr3oAU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "> Seen below is the original unaltered dataset from the source.\n",
        "\n",
        "> There are names of all countries with the 9 measured fields for each country.\n",
        "\n"
      ],
      "metadata": {
        "id": "EftVBLVT3sK_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv(\"Country-data.csv\")\n",
        "df = data.copy()\n",
        "original = df.copy()\n",
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Xt91ap-HZe1g",
        "outputId": "7ef4fab9-eda4-45ab-cc60-ceb4959266f7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               country  child_mort  exports  health  imports  income  \\\n",
              "0          Afghanistan       90.20    10.00    7.58    44.90    1610   \n",
              "1              Albania       16.60    28.00    6.55    48.60    9930   \n",
              "2              Algeria       27.30    38.40    4.17    31.40   12900   \n",
              "3               Angola      119.00    62.30    2.85    42.90    5900   \n",
              "4  Antigua and Barbuda       10.30    45.50    6.03    58.90   19100   \n",
              "\n",
              "   inflation  life_expec  total_fer   gdpp  \n",
              "0       9.44       56.20       5.82    553  \n",
              "1       4.49       76.30       1.65   4090  \n",
              "2      16.10       76.50       2.89   4460  \n",
              "3      22.40       60.10       6.16   3530  \n",
              "4       1.44       76.80       2.13  12200  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c9fc543d-215d-44a3-a3fc-7138a7b03112\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>child_mort</th>\n",
              "      <th>exports</th>\n",
              "      <th>health</th>\n",
              "      <th>imports</th>\n",
              "      <th>income</th>\n",
              "      <th>inflation</th>\n",
              "      <th>life_expec</th>\n",
              "      <th>total_fer</th>\n",
              "      <th>gdpp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>90.20</td>\n",
              "      <td>10.00</td>\n",
              "      <td>7.58</td>\n",
              "      <td>44.90</td>\n",
              "      <td>1610</td>\n",
              "      <td>9.44</td>\n",
              "      <td>56.20</td>\n",
              "      <td>5.82</td>\n",
              "      <td>553</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>16.60</td>\n",
              "      <td>28.00</td>\n",
              "      <td>6.55</td>\n",
              "      <td>48.60</td>\n",
              "      <td>9930</td>\n",
              "      <td>4.49</td>\n",
              "      <td>76.30</td>\n",
              "      <td>1.65</td>\n",
              "      <td>4090</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>27.30</td>\n",
              "      <td>38.40</td>\n",
              "      <td>4.17</td>\n",
              "      <td>31.40</td>\n",
              "      <td>12900</td>\n",
              "      <td>16.10</td>\n",
              "      <td>76.50</td>\n",
              "      <td>2.89</td>\n",
              "      <td>4460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Angola</td>\n",
              "      <td>119.00</td>\n",
              "      <td>62.30</td>\n",
              "      <td>2.85</td>\n",
              "      <td>42.90</td>\n",
              "      <td>5900</td>\n",
              "      <td>22.40</td>\n",
              "      <td>60.10</td>\n",
              "      <td>6.16</td>\n",
              "      <td>3530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>10.30</td>\n",
              "      <td>45.50</td>\n",
              "      <td>6.03</td>\n",
              "      <td>58.90</td>\n",
              "      <td>19100</td>\n",
              "      <td>1.44</td>\n",
              "      <td>76.80</td>\n",
              "      <td>2.13</td>\n",
              "      <td>12200</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9fc543d-215d-44a3-a3fc-7138a7b03112')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c9fc543d-215d-44a3-a3fc-7138a7b03112 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c9fc543d-215d-44a3-a3fc-7138a7b03112');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fd1dbecc-f8af-4215-a440-1acd8c194050\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd1dbecc-f8af-4215-a440-1acd8c194050')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fd1dbecc-f8af-4215-a440-1acd8c194050 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data",
              "summary": "{\n  \"name\": \"data\",\n  \"rows\": 167,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 167,\n        \"samples\": [\n          \"Micronesia, Fed. Sts.\",\n          \"Namibia\",\n          \"Jordan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"child_mort\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.32893145927617,\n        \"min\": 2.6,\n        \"max\": 208.0,\n        \"num_unique_values\": 139,\n        \"samples\": [\n          17.1,\n          36.9,\n          149.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.41201011142416,\n        \"min\": 0.109,\n        \"max\": 200.0,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          28.6,\n          57.8,\n          20.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7468374978890795,\n        \"min\": 1.81,\n        \"max\": 17.9,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          9.54,\n          8.95,\n          3.66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24.209588976108698,\n        \"min\": 0.0659,\n        \"max\": 174.0,\n        \"num_unique_values\": 151,\n        \"samples\": [\n          79.9,\n          70.7,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19278,\n        \"min\": 609,\n        \"max\": 125000,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          7710,\n          17400,\n          18300\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"inflation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.570703901430559,\n        \"min\": -4.21,\n        \"max\": 104.0,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          3.8,\n          -3.22,\n          0.238\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"life_expec\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.893171908900408,\n        \"min\": 32.1,\n        \"max\": 82.8,\n        \"num_unique_values\": 127,\n        \"samples\": [\n          57.3,\n          81.5,\n          68.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_fer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5138475432630463,\n        \"min\": 1.15,\n        \"max\": 7.49,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          1.27,\n          3.16,\n          2.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gdpp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18328,\n        \"min\": 231,\n        \"max\": 105000,\n        \"num_unique_values\": 157,\n        \"samples\": [\n          10800,\n          4660,\n          22100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "original"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "-x0TM9j5e7zD",
        "outputId": "a26f169c-b947-4d55-a9b3-f25035f9f347"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 country  child_mort  exports  health  imports  income  \\\n",
              "0            Afghanistan       90.20    10.00    7.58    44.90    1610   \n",
              "1                Albania       16.60    28.00    6.55    48.60    9930   \n",
              "2                Algeria       27.30    38.40    4.17    31.40   12900   \n",
              "3                 Angola      119.00    62.30    2.85    42.90    5900   \n",
              "4    Antigua and Barbuda       10.30    45.50    6.03    58.90   19100   \n",
              "..                   ...         ...      ...     ...      ...     ...   \n",
              "162              Vanuatu       29.20    46.60    5.25    52.70    2950   \n",
              "163            Venezuela       17.10    28.50    4.91    17.60   16500   \n",
              "164              Vietnam       23.30    72.00    6.84    80.20    4490   \n",
              "165                Yemen       56.30    30.00    5.18    34.40    4480   \n",
              "166               Zambia       83.10    37.00    5.89    30.90    3280   \n",
              "\n",
              "     inflation  life_expec  total_fer   gdpp  \n",
              "0         9.44       56.20       5.82    553  \n",
              "1         4.49       76.30       1.65   4090  \n",
              "2        16.10       76.50       2.89   4460  \n",
              "3        22.40       60.10       6.16   3530  \n",
              "4         1.44       76.80       2.13  12200  \n",
              "..         ...         ...        ...    ...  \n",
              "162       2.62       63.00       3.50   2970  \n",
              "163      45.90       75.40       2.47  13500  \n",
              "164      12.10       73.10       1.95   1310  \n",
              "165      23.60       67.50       4.67   1310  \n",
              "166      14.00       52.00       5.40   1460  \n",
              "\n",
              "[167 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bbf23e39-b193-4bcf-9f17-94f8d2ef134c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>child_mort</th>\n",
              "      <th>exports</th>\n",
              "      <th>health</th>\n",
              "      <th>imports</th>\n",
              "      <th>income</th>\n",
              "      <th>inflation</th>\n",
              "      <th>life_expec</th>\n",
              "      <th>total_fer</th>\n",
              "      <th>gdpp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>90.20</td>\n",
              "      <td>10.00</td>\n",
              "      <td>7.58</td>\n",
              "      <td>44.90</td>\n",
              "      <td>1610</td>\n",
              "      <td>9.44</td>\n",
              "      <td>56.20</td>\n",
              "      <td>5.82</td>\n",
              "      <td>553</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>16.60</td>\n",
              "      <td>28.00</td>\n",
              "      <td>6.55</td>\n",
              "      <td>48.60</td>\n",
              "      <td>9930</td>\n",
              "      <td>4.49</td>\n",
              "      <td>76.30</td>\n",
              "      <td>1.65</td>\n",
              "      <td>4090</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>27.30</td>\n",
              "      <td>38.40</td>\n",
              "      <td>4.17</td>\n",
              "      <td>31.40</td>\n",
              "      <td>12900</td>\n",
              "      <td>16.10</td>\n",
              "      <td>76.50</td>\n",
              "      <td>2.89</td>\n",
              "      <td>4460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Angola</td>\n",
              "      <td>119.00</td>\n",
              "      <td>62.30</td>\n",
              "      <td>2.85</td>\n",
              "      <td>42.90</td>\n",
              "      <td>5900</td>\n",
              "      <td>22.40</td>\n",
              "      <td>60.10</td>\n",
              "      <td>6.16</td>\n",
              "      <td>3530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>10.30</td>\n",
              "      <td>45.50</td>\n",
              "      <td>6.03</td>\n",
              "      <td>58.90</td>\n",
              "      <td>19100</td>\n",
              "      <td>1.44</td>\n",
              "      <td>76.80</td>\n",
              "      <td>2.13</td>\n",
              "      <td>12200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>Vanuatu</td>\n",
              "      <td>29.20</td>\n",
              "      <td>46.60</td>\n",
              "      <td>5.25</td>\n",
              "      <td>52.70</td>\n",
              "      <td>2950</td>\n",
              "      <td>2.62</td>\n",
              "      <td>63.00</td>\n",
              "      <td>3.50</td>\n",
              "      <td>2970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>Venezuela</td>\n",
              "      <td>17.10</td>\n",
              "      <td>28.50</td>\n",
              "      <td>4.91</td>\n",
              "      <td>17.60</td>\n",
              "      <td>16500</td>\n",
              "      <td>45.90</td>\n",
              "      <td>75.40</td>\n",
              "      <td>2.47</td>\n",
              "      <td>13500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>Vietnam</td>\n",
              "      <td>23.30</td>\n",
              "      <td>72.00</td>\n",
              "      <td>6.84</td>\n",
              "      <td>80.20</td>\n",
              "      <td>4490</td>\n",
              "      <td>12.10</td>\n",
              "      <td>73.10</td>\n",
              "      <td>1.95</td>\n",
              "      <td>1310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>165</th>\n",
              "      <td>Yemen</td>\n",
              "      <td>56.30</td>\n",
              "      <td>30.00</td>\n",
              "      <td>5.18</td>\n",
              "      <td>34.40</td>\n",
              "      <td>4480</td>\n",
              "      <td>23.60</td>\n",
              "      <td>67.50</td>\n",
              "      <td>4.67</td>\n",
              "      <td>1310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>Zambia</td>\n",
              "      <td>83.10</td>\n",
              "      <td>37.00</td>\n",
              "      <td>5.89</td>\n",
              "      <td>30.90</td>\n",
              "      <td>3280</td>\n",
              "      <td>14.00</td>\n",
              "      <td>52.00</td>\n",
              "      <td>5.40</td>\n",
              "      <td>1460</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>167 rows × 10 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbf23e39-b193-4bcf-9f17-94f8d2ef134c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bbf23e39-b193-4bcf-9f17-94f8d2ef134c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bbf23e39-b193-4bcf-9f17-94f8d2ef134c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7343f46c-f7fb-4767-ae6b-c60040a7a5be\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7343f46c-f7fb-4767-ae6b-c60040a7a5be')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7343f46c-f7fb-4767-ae6b-c60040a7a5be button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "original",
              "summary": "{\n  \"name\": \"original\",\n  \"rows\": 167,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 167,\n        \"samples\": [\n          \"Micronesia, Fed. Sts.\",\n          \"Namibia\",\n          \"Jordan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"child_mort\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.32893145927617,\n        \"min\": 2.6,\n        \"max\": 208.0,\n        \"num_unique_values\": 139,\n        \"samples\": [\n          17.1,\n          36.9,\n          149.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.41201011142416,\n        \"min\": 0.109,\n        \"max\": 200.0,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          28.6,\n          57.8,\n          20.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7468374978890795,\n        \"min\": 1.81,\n        \"max\": 17.9,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          9.54,\n          8.95,\n          3.66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24.209588976108698,\n        \"min\": 0.0659,\n        \"max\": 174.0,\n        \"num_unique_values\": 151,\n        \"samples\": [\n          79.9,\n          70.7,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19278,\n        \"min\": 609,\n        \"max\": 125000,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          7710,\n          17400,\n          18300\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"inflation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.570703901430559,\n        \"min\": -4.21,\n        \"max\": 104.0,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          3.8,\n          -3.22,\n          0.238\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"life_expec\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.893171908900408,\n        \"min\": 32.1,\n        \"max\": 82.8,\n        \"num_unique_values\": 127,\n        \"samples\": [\n          57.3,\n          81.5,\n          68.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_fer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5138475432630463,\n        \"min\": 1.15,\n        \"max\": 7.49,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          1.27,\n          3.16,\n          2.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gdpp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18328,\n        \"min\": 231,\n        \"max\": 105000,\n        \"num_unique_values\": 157,\n        \"samples\": [\n          10800,\n          4660,\n          22100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Let's check if there are any null values in the dataset. If none, continue to proceed to the next step."
      ],
      "metadata": {
        "id": "0HeJSTai3991"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.heatmap(data.isnull(),cmap = 'magma',cbar = False);\n",
        "#reuslt : no null values in data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 495
        },
        "id": "zHnOHmWPkkJR",
        "outputId": "5cefac71-811a-4b42-85b2-dd7ede183105"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> For reference, below are the statistics of the dataset, such as the mean, standard deviation, min, max, etc of each field/feature in the dataset."
      ],
      "metadata": {
        "id": "dVVq9w-w4KX8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "hL2cPirOk7Eg",
        "outputId": "fdd1d357-4378-4a33-cce6-87b32bc9a01c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       child_mort  exports  health  imports    income  inflation  life_expec  \\\n",
              "count      167.00   167.00  167.00   167.00    167.00     167.00      167.00   \n",
              "mean        38.27    41.11    6.82    46.89  17144.69       7.78       70.56   \n",
              "std         40.33    27.41    2.75    24.21  19278.07      10.57        8.89   \n",
              "min          2.60     0.11    1.81     0.07    609.00      -4.21       32.10   \n",
              "25%          8.25    23.80    4.92    30.20   3355.00       1.81       65.30   \n",
              "50%         19.30    35.00    6.32    43.30   9960.00       5.39       73.10   \n",
              "75%         62.10    51.35    8.60    58.75  22800.00      10.75       76.80   \n",
              "max        208.00   200.00   17.90   174.00 125000.00     104.00       82.80   \n",
              "\n",
              "       total_fer      gdpp  \n",
              "count     167.00    167.00  \n",
              "mean        2.95  12964.16  \n",
              "std         1.51  18328.70  \n",
              "min         1.15    231.00  \n",
              "25%         1.79   1330.00  \n",
              "50%         2.41   4660.00  \n",
              "75%         3.88  14050.00  \n",
              "max         7.49 105000.00  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-433f14f8-d925-478a-b83f-454b439ab0d0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>child_mort</th>\n",
              "      <th>exports</th>\n",
              "      <th>health</th>\n",
              "      <th>imports</th>\n",
              "      <th>income</th>\n",
              "      <th>inflation</th>\n",
              "      <th>life_expec</th>\n",
              "      <th>total_fer</th>\n",
              "      <th>gdpp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>167.00</td>\n",
              "      <td>167.00</td>\n",
              "      <td>167.00</td>\n",
              "      <td>167.00</td>\n",
              "      <td>167.00</td>\n",
              "      <td>167.00</td>\n",
              "      <td>167.00</td>\n",
              "      <td>167.00</td>\n",
              "      <td>167.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>38.27</td>\n",
              "      <td>41.11</td>\n",
              "      <td>6.82</td>\n",
              "      <td>46.89</td>\n",
              "      <td>17144.69</td>\n",
              "      <td>7.78</td>\n",
              "      <td>70.56</td>\n",
              "      <td>2.95</td>\n",
              "      <td>12964.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>40.33</td>\n",
              "      <td>27.41</td>\n",
              "      <td>2.75</td>\n",
              "      <td>24.21</td>\n",
              "      <td>19278.07</td>\n",
              "      <td>10.57</td>\n",
              "      <td>8.89</td>\n",
              "      <td>1.51</td>\n",
              "      <td>18328.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2.60</td>\n",
              "      <td>0.11</td>\n",
              "      <td>1.81</td>\n",
              "      <td>0.07</td>\n",
              "      <td>609.00</td>\n",
              "      <td>-4.21</td>\n",
              "      <td>32.10</td>\n",
              "      <td>1.15</td>\n",
              "      <td>231.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>8.25</td>\n",
              "      <td>23.80</td>\n",
              "      <td>4.92</td>\n",
              "      <td>30.20</td>\n",
              "      <td>3355.00</td>\n",
              "      <td>1.81</td>\n",
              "      <td>65.30</td>\n",
              "      <td>1.79</td>\n",
              "      <td>1330.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>19.30</td>\n",
              "      <td>35.00</td>\n",
              "      <td>6.32</td>\n",
              "      <td>43.30</td>\n",
              "      <td>9960.00</td>\n",
              "      <td>5.39</td>\n",
              "      <td>73.10</td>\n",
              "      <td>2.41</td>\n",
              "      <td>4660.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>62.10</td>\n",
              "      <td>51.35</td>\n",
              "      <td>8.60</td>\n",
              "      <td>58.75</td>\n",
              "      <td>22800.00</td>\n",
              "      <td>10.75</td>\n",
              "      <td>76.80</td>\n",
              "      <td>3.88</td>\n",
              "      <td>14050.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>208.00</td>\n",
              "      <td>200.00</td>\n",
              "      <td>17.90</td>\n",
              "      <td>174.00</td>\n",
              "      <td>125000.00</td>\n",
              "      <td>104.00</td>\n",
              "      <td>82.80</td>\n",
              "      <td>7.49</td>\n",
              "      <td>105000.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-433f14f8-d925-478a-b83f-454b439ab0d0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-433f14f8-d925-478a-b83f-454b439ab0d0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-433f14f8-d925-478a-b83f-454b439ab0d0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-33566e1d-715b-4312-ac55-f92fb098aaf1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33566e1d-715b-4312-ac55-f92fb098aaf1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-33566e1d-715b-4312-ac55-f92fb098aaf1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"child_mort\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76.81503994065251,\n        \"min\": 2.6,\n        \"max\": 208.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          38.27005988023952,\n          19.3,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 73.2160856931106,\n        \"min\": 0.109,\n        \"max\": 200.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          41.108976047904186,\n          35.0,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56.77866253439305,\n        \"min\": 1.81,\n        \"max\": 167.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.8156886227544895,\n          6.32,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65.61765437881166,\n        \"min\": 0.0659,\n        \"max\": 174.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          46.89021497005987,\n          43.3,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41412.96793774299,\n        \"min\": 167.0,\n        \"max\": 125000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          17144.688622754493,\n          9960.0,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"inflation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.74640092713679,\n        \"min\": -4.21,\n        \"max\": 167.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.781832335329342,\n          5.39,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"life_expec\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45.961645704541574,\n        \"min\": 8.893171908900408,\n        \"max\": 167.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          70.55568862275449,\n          73.1,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_fer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58.00825660852101,\n        \"min\": 1.15,\n        \"max\": 167.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.947964071856287,\n          2.41,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gdpp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35212.434235760826,\n        \"min\": 167.0,\n        \"max\": 105000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12964.155688622754,\n          4660.0,\n          167.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "col = list(data.columns)\n",
        "col.remove('country')\n",
        "categorical_features = ['country']\n",
        "numerical_features = [*col]\n",
        "print('Categorical Features :',*categorical_features)\n",
        "print('Numerical Features :',*numerical_features)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sndDlTL0k6ZR",
        "outputId": "d5ead7d8-355f-4df4-e0bb-a3f9b1edd4b2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Categorical Features : country\n",
            "Numerical Features : child_mort exports health imports income inflation life_expec total_fer gdpp\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###PART 2 : EXPLORATORY DATA ANALYSIS"
      ],
      "metadata": {
        "id": "l0oBRz6zXiRE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "####A : REFERENCE"
      ],
      "metadata": {
        "id": "Ca-NYshf5bqp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "> The distribution of each feature in the dataset."
      ],
      "metadata": {
        "id": "4a67t_l24XJt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "colors = ['#FF781F','#2D2926']\n",
        "fig, ax = plt.subplots(nrows = 3,ncols = 3,figsize = (15,15))\n",
        "for i in range(len(numerical_features)):\n",
        "    plt.subplot(3,3,i+1)\n",
        "    sns.distplot(data[numerical_features[i]],color = colors[0])\n",
        "    title = 'Distribution : ' + numerical_features[i]\n",
        "    plt.title(title)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "uDSoVBe8lrzZ",
        "outputId": "4e9b5d6b-42cc-4199-8f27-9349435749e4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1500 with 9 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> The range of values for the features in the dataset."
      ],
      "metadata": {
        "id": "TASDmOik4jIV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig  = plt.subplots(nrows = 3,ncols = 3,figsize = (15,15))\n",
        "for i in range(len(numerical_features)):\n",
        "    plt.subplot(3,3,i+1)\n",
        "    ax = sns.boxplot(data[numerical_features[i]],color = colors[0])\n",
        "    plt.title(numerical_features[i])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "nT_Cqf5ymPW5",
        "outputId": "374e0a28-c010-4f43-a43a-c0b5e35f3d1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1500 with 9 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "####B : SOME INTERPRETATIONS"
      ],
      "metadata": {
        "id": "afj1jLzX5gst"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Finding the top 10 world countries with highest exports.\n"
      ],
      "metadata": {
        "id": "sqrr4xxk4yc1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "top_countries = df.nlargest(10, 'exports')[['country', 'exports']]\n",
        "\n",
        "plt.figure(figsize=(15, 7))\n",
        "ax = sns.barplot(x='country', y='exports', data=top_countries, palette='YlOrRd', edgecolor='black')\n",
        "plt.title('Top 10 Countries with High Exports (%)', fontweight='bold')\n",
        "plt.xlabel('Country')\n",
        "plt.ylabel('Exports')\n",
        "plt.xticks(rotation=0, ha='center')\n",
        "for rect in ax.patches:\n",
        "    ax.text(rect.get_x() + rect.get_width() / 2, rect.get_height(), int(rect.get_height()),\n",
        "            ha='center', va='bottom', fontsize=12)\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 641
        },
        "id": "4w2ULjwkXm_7",
        "outputId": "a9f1e0f0-38bf-4142-fc5e-9b521f4a8464"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> As seen above, Singapore has the highest export percentage, followed by Luxembourg, Malta, Ireland, and some others. Quite interesting to see that some of the widely-known first world countries such as the United States, France, or United Kingdom are not in the list."
      ],
      "metadata": {
        "id": "Z6jhoiil5qLe"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Next, let's see the top 5 countries with lowest health spending per capita."
      ],
      "metadata": {
        "id": "LfqjZBio6HjF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lowHealthSpend_country = df.nsmallest(5, 'health')\n",
        "countries = lowHealthSpend_country['country']\n",
        "health_spending_percentage = lowHealthSpend_country['health']\n",
        "\n",
        "plt.figure(figsize=(15, 7))\n",
        "sns.barplot(x=health_spending_percentage, y=countries, palette='YlOrRd', edgecolor='black')\n",
        "plt.title('Top 5 Countries with Low Health Spending per Capita (%)', fontweight='bold')\n",
        "plt.xlabel('Health Spending (%) of GDP per Capita')\n",
        "plt.ylabel('Country')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 641
        },
        "id": "FWD90I9cZWu7",
        "outputId": "306c0ca6-370a-46e6-e6da-dced388581b4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> From the graph in this particular year, Qatar has the smallest health spending percentage of GDP per capita. Myanmar, Pakistan, Republic of Congo and Turkmenistan are some others with similar little spending."
      ],
      "metadata": {
        "id": "kztBC1SD6LP7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###PART 3 : FEATURE ENGINEERING (CATEGORIZATION)"
      ],
      "metadata": {
        "id": "aAznmnkPZdrT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "> As there are too many fields/features to be accounted for, it would be good to reduce the 9 features into 3 feature groups for easier analysis.\n",
        "\n",
        "> To accomplish this, a **Feature Correlation Matrix** is used."
      ],
      "metadata": {
        "id": "7oVGc7xd6911"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#CORRELATION MATRIX\n",
        "\n",
        "#Select only numerical columns from the dataframe\n",
        "numerical_data = data.select_dtypes(include=[np.number])\n",
        "\n",
        "#Making the matrix\n",
        "ut = np.triu(numerical_data.corr())\n",
        "lt = np.tril(numerical_data.corr())\n",
        "\n",
        "fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(15, 5))\n",
        "plt.subplot(1, 2, 1)\n",
        "sns.heatmap(numerical_data.corr(), cmap=colors, annot=True, cbar=True, mask=ut)\n",
        "plt.title('Correlation Matrix : Upper Triangular Format')\n",
        "\n",
        "plt.subplot(1, 2, 2)\n",
        "sns.heatmap(numerical_data.corr(), cmap=colors, annot=True, cbar=True, mask=lt)\n",
        "plt.title('Correlation Matrix : Lower Triangular Format')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "id": "BIPYGcnBjzdq",
        "outputId": "c977e035-47f6-4fa8-ac74-1849444f61e6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x500 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Deriving from the matrix above and combining with the real world logical reasoning, we can attempt to group the 9 features into 3 sectors :    \n",
        "*   Health Sector : child-mortality, health, life-expectancy, total-fertility\n",
        "*   Trade Sector : imports, exports\n",
        "*   Finance Sector : income, inflation, gdpp\n",
        "\n",
        "> And so, the next step is to simplify the 9 originally mentioned features into these 3 sectors and ensure normalization/standardization is done afterwards.\n",
        "\n"
      ],
      "metadata": {
        "id": "yezRy1Ph7WMe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#FEATURE CATEGORIZATION\n",
        "\n",
        "df1 = pd.DataFrame()\n",
        "df1['Health'] = (data['child_mort'] / data['child_mort'].mean()) + (data['health'] / data['health'].mean()) + (data['life_expec'] / data['life_expec'].mean()) + (data['total_fer'] / data['total_fer'].mean())\n",
        "df1['Trade'] = (data['imports'] / data['imports'].mean()) + (data['exports'] / data['exports'].mean())\n",
        "df1['Finance'] = (data['income'] / data['income'].mean()) + (data['inflation'] / data['inflation'].mean()) + (data['gdpp'] / data['gdpp'].mean())\n",
        "df1.head(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "KfYIxY2knTFh",
        "outputId": "1bf3bb88-4bfe-4541-e02f-91b9ca673fe3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Health  Trade  Finance\n",
              "0     6.24   1.20     1.35\n",
              "1     3.04   1.72     1.47\n",
              "2     3.39   1.60     3.17\n",
              "3     6.47   2.43     3.49\n",
              "4     2.96   2.36     2.24\n",
              "5     3.45   0.80     4.57\n",
              "6     2.73   1.47     1.64\n",
              "7     3.22   0.93     6.57\n",
              "8     3.36   2.27     6.25\n",
              "9     3.52   1.76     3.16\n",
              "10    3.20   1.78     3.44\n",
              "11    2.76   2.78     4.95\n",
              "12    3.60   0.85     1.12\n",
              "13    3.23   2.00     2.17\n",
              "14    2.47   2.63     3.35\n",
              "15    3.45   3.45     6.06\n",
              "16    3.19   2.64     0.94\n",
              "17    6.20   1.37     0.28\n",
              "18    3.71   2.54     1.31\n",
              "19    4.03   1.73     1.60"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-00da4fed-1360-4e90-9be5-9f31a7e474e6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Health</th>\n",
              "      <th>Trade</th>\n",
              "      <th>Finance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6.24</td>\n",
              "      <td>1.20</td>\n",
              "      <td>1.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3.04</td>\n",
              "      <td>1.72</td>\n",
              "      <td>1.47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.39</td>\n",
              "      <td>1.60</td>\n",
              "      <td>3.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6.47</td>\n",
              "      <td>2.43</td>\n",
              "      <td>3.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2.96</td>\n",
              "      <td>2.36</td>\n",
              "      <td>2.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3.45</td>\n",
              "      <td>0.80</td>\n",
              "      <td>4.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2.73</td>\n",
              "      <td>1.47</td>\n",
              "      <td>1.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>3.22</td>\n",
              "      <td>0.93</td>\n",
              "      <td>6.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>3.36</td>\n",
              "      <td>2.27</td>\n",
              "      <td>6.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3.52</td>\n",
              "      <td>1.76</td>\n",
              "      <td>3.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>3.20</td>\n",
              "      <td>1.78</td>\n",
              "      <td>3.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>2.76</td>\n",
              "      <td>2.78</td>\n",
              "      <td>4.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>3.60</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>3.23</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>2.47</td>\n",
              "      <td>2.63</td>\n",
              "      <td>3.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>3.45</td>\n",
              "      <td>3.45</td>\n",
              "      <td>6.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>3.19</td>\n",
              "      <td>2.64</td>\n",
              "      <td>0.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>6.20</td>\n",
              "      <td>1.37</td>\n",
              "      <td>0.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>3.71</td>\n",
              "      <td>2.54</td>\n",
              "      <td>1.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>4.03</td>\n",
              "      <td>1.73</td>\n",
              "      <td>1.60</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00da4fed-1360-4e90-9be5-9f31a7e474e6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-00da4fed-1360-4e90-9be5-9f31a7e474e6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-00da4fed-1360-4e90-9be5-9f31a7e474e6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c4d7066d-5660-4483-a838-4f7856d66b1c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c4d7066d-5660-4483-a838-4f7856d66b1c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c4d7066d-5660-4483-a838-4f7856d66b1c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 167,\n  \"fields\": [\n    {\n      \"column\": \"Health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3807779240800406,\n        \"min\": 2.2164002096190267,\n        \"max\": 8.64630542657466,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          5.229250756284496,\n          4.5097800248716045,\n          4.046839680928302\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1040550434174128,\n        \"min\": 0.00405689954376212,\n        \"max\": 8.575913057351382,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          2.299090607083496,\n          2.457276242057055,\n          2.646448247831036\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Finance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5793715269413027,\n        \"min\": 0.2598532823126999,\n        \"max\": 13.913036097624913,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          0.903737662344372,\n          1.3512576790445046,\n          1.9195096733318555\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#NORMALIZATION / STANDARDIZATION\n",
        "\n",
        "from sklearn.preprocessing import MinMaxScaler,StandardScaler\n",
        "mms = MinMaxScaler() # Normalization\n",
        "ss = StandardScaler() # Standardization\n",
        "\n",
        "df1['Health'] = mms.fit_transform(df1[['Health']])\n",
        "df1['Trade'] = mms.fit_transform(df1[['Trade']])\n",
        "df1['Finance'] = mms.fit_transform(df1[['Finance']])\n",
        "df1.insert(loc = 0, value = list(data['country']), column = 'Country')\n",
        "df1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "kABRmLwSnega",
        "outputId": "778ddcb2-3883-4512-81e0-88258fbaf71d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               Country  Health  Trade  Finance\n",
              "0          Afghanistan    0.63   0.14     0.08\n",
              "1              Albania    0.13   0.20     0.09\n",
              "2              Algeria    0.18   0.19     0.21\n",
              "3               Angola    0.66   0.28     0.24\n",
              "4  Antigua and Barbuda    0.12   0.28     0.15"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2994217e-a283-4943-8426-d58cc96ca4cb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Health</th>\n",
              "      <th>Trade</th>\n",
              "      <th>Finance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.19</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Angola</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.15</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2994217e-a283-4943-8426-d58cc96ca4cb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2994217e-a283-4943-8426-d58cc96ca4cb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2994217e-a283-4943-8426-d58cc96ca4cb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d6f6072f-6c9a-4cf0-a2eb-48f6c344b9e0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6f6072f-6c9a-4cf0-a2eb-48f6c344b9e0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d6f6072f-6c9a-4cf0-a2eb-48f6c344b9e0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 167,\n  \"fields\": [\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 167,\n        \"samples\": [\n          \"Micronesia, Fed. Sts.\",\n          \"Namibia\",\n          \"Jordan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2147431225640675,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          0.46856842286268774,\n          0.35667396919085914,\n          0.28467596481553314\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1287999965342152,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          0.2677405762868894,\n          0.2861946464510833,\n          0.3082636128792792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Finance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18892089572319404,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          0.04716002039535777,\n          0.07993772671876782,\n          0.12155820466696093\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###PART 4 : K-MEANS CLUSTERING"
      ],
      "metadata": {
        "id": "xYCrnX2bZhMD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "> As required by the class professor, the K-Means function seen below is manually coded, where then the K-Means clustering process will **not use the library-provided function**.\n",
        "\n",
        "> First, let's find the number of *k* (number of clusters) that is most ideal for the K-Means Clustering process."
      ],
      "metadata": {
        "id": "hy0HlF3g8HPU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#ELBOW METHOD (find value of k - how many clusters needed)\n",
        "\n",
        "m = df1.drop(columns = ['Country']).values # Feature Combination : Health - Trade - Finance\n",
        "\n",
        "sse = {};sil = [];kmax = 10\n",
        "fig = plt.subplots(nrows = 1, ncols = 2, figsize = (20,5))\n",
        "\n",
        "# Elbow Method :\n",
        "plt.subplot(1,1,1)\n",
        "for k in range(1, 10):\n",
        "    #here, we use KMEANS from library\n",
        "    kmeans = KMeans(n_clusters=k, max_iter=1000).fit(m)\n",
        "    sse[k] = kmeans.inertia_ # Inertia: Sum of distances of samples to their closest cluster center\n",
        "sns.lineplot(x = list(sse.keys()), y = list(sse.values()));\n",
        "plt.title('Elbow Method')\n",
        "plt.xlabel(\"k : Number of cluster\")\n",
        "plt.ylabel(\"Sum of Squared Error\")\n",
        "plt.grid()\n",
        "\n",
        "#results : k is 3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "Ic3jjHsQoQNa",
        "outputId": "b3227297-e750-4eff-a2ef-c3b47e24634e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> As seen above, the ideal number of *k* will be 3. Therefore, there will be 3 clusters after the K-Means function is called.\n",
        "\n",
        "> Now, let's move on to creating the manually coded function for K-Means Clustering, with *k* as the resulting number of clusters."
      ],
      "metadata": {
        "id": "DV010FlM9ZjC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#MANUAL K-MEANS CLUSTERING FUNCTION (for 3 features)\n",
        "import numpy as np\n",
        "\n",
        "def initialize_centers(data, k):\n",
        "    # Randomly initialize k cluster centers\n",
        "    np.random.seed(0)  # For reproducibility\n",
        "    centers_indices = np.random.choice(data.shape[0], k, replace=False)\n",
        "    centers = data[centers_indices]\n",
        "    return centers\n",
        "\n",
        "def assign_to_clusters(data, centers):\n",
        "    # Assign data points to the nearest cluster based on Euclidean distance\n",
        "    distances = np.sqrt(((data - centers[:, np.newaxis])**2).sum(axis=2))\n",
        "    return np.argmin(distances, axis=0)\n",
        "\n",
        "def update_centers(data, clusters, k):\n",
        "    # Update cluster centers by taking the mean of data points in each cluster\n",
        "    centers = np.zeros((k, data.shape[1]))\n",
        "    for cluster_id in range(k):\n",
        "        cluster_data = data[clusters == cluster_id]\n",
        "        if len(cluster_data) > 0:\n",
        "            centers[cluster_id] = np.mean(cluster_data, axis=0)\n",
        "    return centers\n",
        "\n",
        "def calculate_total_variance(data, clusters, centers):\n",
        "    # Calculate the total variance of the clusters\n",
        "    total_variance = 0\n",
        "    for cluster_id in range(len(centers)):\n",
        "        cluster_data = data[clusters == cluster_id]\n",
        "        if len(cluster_data) > 0:\n",
        "            cluster_variance = np.sum((cluster_data - centers[cluster_id])**2)\n",
        "            total_variance += cluster_variance\n",
        "    return total_variance\n",
        "\n",
        "def kmeans_multiple_runs(data, k, num_runs=10, max_iter=1000):\n",
        "    best_clusters = None\n",
        "    best_centers = None\n",
        "    best_total_variance = np.inf  # Initialize with a large value\n",
        "\n",
        "    for _ in range(num_runs):\n",
        "        # Initialize cluster centers for this run\n",
        "        centers = initialize_centers(data, k)\n",
        "\n",
        "        for _ in range(max_iter):\n",
        "            clusters = assign_to_clusters(data, centers)\n",
        "            new_centers = update_centers(data, clusters, k)\n",
        "            if np.allclose(centers, new_centers):\n",
        "                break\n",
        "            centers = new_centers\n",
        "\n",
        "        total_variance = calculate_total_variance(data, clusters, centers)\n",
        "\n",
        "        if total_variance < best_total_variance:\n",
        "            best_clusters = clusters\n",
        "            best_centers = centers\n",
        "            best_total_variance = total_variance\n",
        "\n",
        "    return best_clusters, best_centers\n"
      ],
      "metadata": {
        "id": "7ulhwLymh3CR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Since there are 3 features (Health, Finance, Trade sectors) that will be taken into consideration, the final clustering will be mapped in a 3-dimensional plot, labeled by colors.\n",
        "\n",
        "> The plotting function can be seen below."
      ],
      "metadata": {
        "id": "cqoNyRyD9rb5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#3D-PLOTTING FUNCTION\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "from mpl_toolkits.mplot3d import Axes3D\n",
        "\n",
        "def plot_3d_clusters(data, clusters, centers):\n",
        "    fig = plt.figure(figsize=(10, 8))\n",
        "    ax = fig.add_subplot(111, projection='3d')\n",
        "\n",
        "    # Scatter plot each data point with its assigned cluster color\n",
        "    for cluster_id in range(len(centers)):\n",
        "        cluster_data = data[clusters == cluster_id]\n",
        "        ax.scatter(cluster_data[:, 0], cluster_data[:, 1], cluster_data[:, 2], label=f'Cluster {cluster_id}', alpha=0.7)\n",
        "\n",
        "    # Plot cluster centers as large markers\n",
        "    ax.scatter(centers[:, 0], centers[:, 1], centers[:, 2], c='red', marker='X', s=200, label='Cluster Centers')\n",
        "\n",
        "    ax.set_xlabel('Health')\n",
        "    ax.set_ylabel('Trade')\n",
        "    ax.set_zlabel('Finance')\n",
        "    ax.set_title('K-means Clustering Results')\n",
        "    ax.legend()\n",
        "\n",
        "    plt.show()"
      ],
      "metadata": {
        "id": "oAFnrFSOh9UR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Now that all the necessary functions have been created, let's call the main K-Means function on the 3-feature dataset."
      ],
      "metadata": {
        "id": "Rm6DLvf4965i"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df1.head(50)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "m8pO_Co6aAlw",
        "outputId": "580fed6f-c56f-4ea1-b99b-6d32ad12fbe8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     Country  Health  Trade  Finance\n",
              "0                Afghanistan    0.63   0.14     0.08\n",
              "1                    Albania    0.13   0.20     0.09\n",
              "2                    Algeria    0.18   0.19     0.21\n",
              "3                     Angola    0.66   0.28     0.24\n",
              "4        Antigua and Barbuda    0.12   0.28     0.15\n",
              "5                  Argentina    0.19   0.09     0.32\n",
              "6                    Armenia    0.08   0.17     0.10\n",
              "7                  Australia    0.16   0.11     0.46\n",
              "8                    Austria    0.18   0.26     0.44\n",
              "9                 Azerbaijan    0.20   0.21     0.21\n",
              "10                   Bahamas    0.15   0.21     0.23\n",
              "11                   Bahrain    0.09   0.32     0.34\n",
              "12                Bangladesh    0.21   0.10     0.06\n",
              "13                  Barbados    0.16   0.23     0.14\n",
              "14                   Belarus    0.04   0.31     0.23\n",
              "15                   Belgium    0.19   0.40     0.43\n",
              "16                    Belize    0.15   0.31     0.05\n",
              "17                     Benin    0.62   0.16     0.00\n",
              "18                    Bhutan    0.23   0.30     0.08\n",
              "19                   Bolivia    0.28   0.20     0.10\n",
              "20    Bosnia and Herzegovina    0.18   0.21     0.06\n",
              "21                  Botswana    0.34   0.25     0.16\n",
              "22                    Brazil    0.20   0.06     0.19\n",
              "23                    Brunei    0.03   0.26     0.68\n",
              "24                  Bulgaria    0.10   0.27     0.10\n",
              "25              Burkina Faso    0.72   0.13     0.05\n",
              "26                   Burundi    0.76   0.12     0.10\n",
              "27                  Cambodia    0.26   0.30     0.03\n",
              "28                  Cameroon    0.61   0.13     0.02\n",
              "29                    Canada    0.20   0.16     0.45\n",
              "30                Cape Verde    0.16   0.25     0.03\n",
              "31  Central African Republic    0.73   0.10     0.01\n",
              "32                      Chad    0.84   0.21     0.05\n",
              "33                     Chile    0.15   0.18     0.22\n",
              "34                     China    0.08   0.13     0.11\n",
              "35                  Colombia    0.18   0.09     0.10\n",
              "36                   Comoros    0.51   0.17     0.03\n",
              "37          Congo, Dem. Rep.    0.78   0.24     0.18\n",
              "38               Congo, Rep.    0.37   0.38     0.21\n",
              "39                Costa Rica    0.22   0.18     0.14\n",
              "40             Cote d'Ivoire    0.63   0.25     0.05\n",
              "41                   Croatia    0.10   0.20     0.15\n",
              "42                    Cyprus    0.06   0.29     0.32\n",
              "43            Czech Republic    0.10   0.34     0.20\n",
              "44                   Denmark    0.21   0.25     0.53\n",
              "45        Dominican Republic    0.24   0.15     0.11\n",
              "46                   Ecuador    0.25   0.16     0.12\n",
              "47                     Egypt    0.20   0.13     0.13\n",
              "48               El Salvador    0.17   0.19     0.05\n",
              "49         Equatorial Guinea    0.62   0.39     0.46"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a592743d-6006-4919-896d-52127ac6455a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>Health</th>\n",
              "      <th>Trade</th>\n",
              "      <th>Finance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.19</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Angola</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Argentina</td>\n",
              "      <td>0.19</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Armenia</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Australia</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Austria</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Azerbaijan</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Bahamas</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bahrain</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bangladesh</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Barbados</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Belarus</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>0.19</td>\n",
              "      <td>0.40</td>\n",
              "      <td>0.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Belize</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Benin</td>\n",
              "      <td>0.62</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Bhutan</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.30</td>\n",
              "      <td>0.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Bolivia</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Bosnia and Herzegovina</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Botswana</td>\n",
              "      <td>0.34</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Brunei</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Bulgaria</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Burkina Faso</td>\n",
              "      <td>0.72</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Burundi</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Cambodia</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.30</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Cameroon</td>\n",
              "      <td>0.61</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Canada</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Cape Verde</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Central African Republic</td>\n",
              "      <td>0.73</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Chad</td>\n",
              "      <td>0.84</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Chile</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>China</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Comoros</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Congo, Dem. Rep.</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.24</td>\n",
              "      <td>0.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Congo, Rep.</td>\n",
              "      <td>0.37</td>\n",
              "      <td>0.38</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Cote d'Ivoire</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Croatia</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Cyprus</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Czech Republic</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.34</td>\n",
              "      <td>0.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Denmark</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>0.24</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Ecuador</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Egypt</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>El Salvador</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.19</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Equatorial Guinea</td>\n",
              "      <td>0.62</td>\n",
              "      <td>0.39</td>\n",
              "      <td>0.46</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a592743d-6006-4919-896d-52127ac6455a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a592743d-6006-4919-896d-52127ac6455a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a592743d-6006-4919-896d-52127ac6455a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ec7e4d52-4716-4b0a-a88e-3b7da30df2b0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ec7e4d52-4716-4b0a-a88e-3b7da30df2b0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ec7e4d52-4716-4b0a-a88e-3b7da30df2b0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 167,\n  \"fields\": [\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 167,\n        \"samples\": [\n          \"Micronesia, Fed. Sts.\",\n          \"Namibia\",\n          \"Jordan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2147431225640675,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          0.46856842286268774,\n          0.35667396919085914,\n          0.28467596481553314\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1287999965342152,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          0.2677405762868894,\n          0.2861946464510833,\n          0.3082636128792792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Finance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18892089572319404,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 167,\n        \"samples\": [\n          0.04716002039535777,\n          0.07993772671876782,\n          0.12155820466696093\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = df1[['Health', 'Trade', 'Finance']].values\n",
        "k = 3  # Number of clusters\n",
        "clusters, centers = kmeans_multiple_runs(data, k)"
      ],
      "metadata": {
        "id": "f8Yh3_e3aJuy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "> After the K-Means function is called, here's a sneak peek of the resulting cluster that each country is grouped into."
      ],
      "metadata": {
        "id": "XsSUzSr7-CbJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "clusters"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vlVXbQu8TXda",
        "outputId": "86f8f456-24ab-4ff2-bb1f-fd8cfb7d4c01"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 1, 0, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1,\n",
              "       1, 2, 1, 0, 0, 1, 0, 2, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1,\n",
              "       2, 1, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 0, 1, 2, 0, 1, 1, 1, 0, 0, 1,\n",
              "       0, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0,\n",
              "       0, 1, 1, 2, 1, 1, 0, 1, 1, 0, 2, 0, 1, 0, 1, 2, 1, 1, 0, 1, 1, 1,\n",
              "       2, 1, 0, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 1, 2, 0, 1, 1,\n",
              "       0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 2, 1, 0, 1, 0, 0, 1, 1, 1,\n",
              "       1, 0, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> To make this neater, here's what the dataframe looks like after the cluster results are combined into it."
      ],
      "metadata": {
        "id": "b57JhSqV-efm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Add cluster labels to your DataFrame\n",
        "df1['Cluster'] = clusters\n",
        "finaldf = original.copy()\n",
        "finaldf['Cluster'] = clusters"
      ],
      "metadata": {
        "id": "2SXbjSYlS3i7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "finaldf.head(55)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "NSrD5LjXTSJz",
        "outputId": "f08027dd-2b89-4dff-b812-b9d9b30dd451"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     country  child_mort  exports  health  imports  income  \\\n",
              "0                Afghanistan       90.20    10.00    7.58    44.90    1610   \n",
              "1                    Albania       16.60    28.00    6.55    48.60    9930   \n",
              "2                    Algeria       27.30    38.40    4.17    31.40   12900   \n",
              "3                     Angola      119.00    62.30    2.85    42.90    5900   \n",
              "4        Antigua and Barbuda       10.30    45.50    6.03    58.90   19100   \n",
              "5                  Argentina       14.50    18.90    8.10    16.00   18700   \n",
              "6                    Armenia       18.10    20.80    4.40    45.30    6700   \n",
              "7                  Australia        4.80    19.80    8.73    20.90   41400   \n",
              "8                    Austria        4.30    51.30   11.00    47.80   43200   \n",
              "9                 Azerbaijan       39.20    54.30    5.88    20.70   16000   \n",
              "10                   Bahamas       13.80    35.00    7.89    43.70   22900   \n",
              "11                   Bahrain        8.60    69.50    4.97    50.90   41100   \n",
              "12                Bangladesh       49.40    16.00    3.52    21.80    2440   \n",
              "13                  Barbados       14.20    39.50    7.97    48.70   15300   \n",
              "14                   Belarus        5.50    51.40    5.61    64.50   16200   \n",
              "15                   Belgium        4.50    76.40   10.70    74.70   41100   \n",
              "16                    Belize       18.80    58.20    5.20    57.50    7880   \n",
              "17                     Benin      111.00    23.80    4.10    37.20    1820   \n",
              "18                    Bhutan       42.70    42.50    5.20    70.70    6420   \n",
              "19                   Bolivia       46.60    41.20    4.84    34.30    5410   \n",
              "20    Bosnia and Herzegovina        6.90    29.70   11.10    51.30    9720   \n",
              "21                  Botswana       52.50    43.60    8.30    51.30   13300   \n",
              "22                    Brazil       19.80    10.70    9.01    11.80   14500   \n",
              "23                    Brunei       10.50    67.40    2.84    28.00   80600   \n",
              "24                  Bulgaria       10.80    50.20    6.87    53.00   15300   \n",
              "25              Burkina Faso      116.00    19.20    6.74    29.60    1430   \n",
              "26                   Burundi       93.60     8.92   11.60    39.20     764   \n",
              "27                  Cambodia       44.40    54.10    5.68    59.50    2520   \n",
              "28                  Cameroon      108.00    22.20    5.13    27.00    2660   \n",
              "29                    Canada        5.60    29.10   11.30    31.00   40700   \n",
              "30                Cape Verde       26.50    32.70    4.09    61.80    5830   \n",
              "31  Central African Republic      149.00    11.80    3.98    26.50     888   \n",
              "32                      Chad      150.00    36.80    4.53    43.50    1930   \n",
              "33                     Chile        8.70    37.70    7.96    31.30   19400   \n",
              "34                     China       15.70    26.30    5.07    22.60    9530   \n",
              "35                  Colombia       18.60    15.90    7.59    17.80   10900   \n",
              "36                   Comoros       88.20    16.50    4.51    51.70    1410   \n",
              "37          Congo, Dem. Rep.      116.00    41.10    7.91    49.60     609   \n",
              "38               Congo, Rep.       63.90    85.10    2.46    54.70    5190   \n",
              "39                Costa Rica       10.20    33.20   10.90    35.00   13000   \n",
              "40             Cote d'Ivoire      111.00    50.60    5.30    43.30    2690   \n",
              "41                   Croatia        5.50    37.60    7.76    38.10   20100   \n",
              "42                    Cyprus        3.60    50.20    5.97    57.50   33900   \n",
              "43            Czech Republic        3.40    66.00    7.88    62.90   28300   \n",
              "44                   Denmark        4.10    50.50   11.40    43.60   44000   \n",
              "45        Dominican Republic       34.40    22.70    6.22    33.30   11100   \n",
              "46                   Ecuador       25.10    27.90    8.06    32.40    9350   \n",
              "47                     Egypt       29.10    21.30    4.66    26.60    9860   \n",
              "48               El Salvador       19.20    26.90    6.91    46.60    7300   \n",
              "49         Equatorial Guinea      111.00    85.80    4.48    58.90   33700   \n",
              "50                   Eritrea       55.20     4.79    2.66    23.30    1420   \n",
              "51                   Estonia        4.50    75.10    6.03    68.70   22700   \n",
              "52                      Fiji       24.10    57.80    4.86    63.90    7350   \n",
              "53                   Finland        3.00    38.70    8.95    37.40   39800   \n",
              "54                    France        4.20    26.80   11.90    28.10   36900   \n",
              "\n",
              "    inflation  life_expec  total_fer   gdpp  Cluster  \n",
              "0        9.44       56.20       5.82    553        0  \n",
              "1        4.49       76.30       1.65   4090        1  \n",
              "2       16.10       76.50       2.89   4460        1  \n",
              "3       22.40       60.10       6.16   3530        0  \n",
              "4        1.44       76.80       2.13  12200        1  \n",
              "5       20.90       75.80       2.37  10300        1  \n",
              "6        7.77       73.30       1.69   3220        1  \n",
              "7        1.16       82.00       1.93  51900        2  \n",
              "8        0.87       80.50       1.44  46900        2  \n",
              "9       13.80       69.10       1.92   5840        1  \n",
              "10      -0.39       73.80       1.86  28000        1  \n",
              "11       7.44       76.00       2.16  20700        2  \n",
              "12       7.14       70.40       2.33    758        1  \n",
              "13       0.32       76.70       1.78  16000        1  \n",
              "14      15.10       70.40       1.49   6030        1  \n",
              "15       1.88       80.00       1.86  44400        2  \n",
              "16       1.14       71.40       2.71   4340        1  \n",
              "17       0.89       61.80       5.36    758        0  \n",
              "18       5.99       72.10       2.38   2180        1  \n",
              "19       8.78       71.60       3.20   1980        1  \n",
              "20       1.40       76.80       1.31   4610        1  \n",
              "21       8.92       57.10       2.88   6350        1  \n",
              "22       8.41       74.20       1.80  11200        1  \n",
              "23      16.70       77.10       1.84  35300        2  \n",
              "24       1.11       73.90       1.57   6840        1  \n",
              "25       6.81       57.90       5.87    575        0  \n",
              "26      12.30       57.70       6.26    231        0  \n",
              "27       3.12       66.10       2.88    786        1  \n",
              "28       1.91       57.30       5.11   1310        0  \n",
              "29       2.87       81.30       1.63  47400        2  \n",
              "30       0.51       72.50       2.67   3310        1  \n",
              "31       2.01       47.50       5.21    446        0  \n",
              "32       6.39       56.50       6.59    897        0  \n",
              "33       8.96       79.10       1.88  12900        1  \n",
              "34       6.94       74.60       1.59   4560        1  \n",
              "35       3.86       76.40       2.01   6250        1  \n",
              "36       3.87       65.90       4.75    769        0  \n",
              "37      20.80       57.50       6.54    334        0  \n",
              "38      20.70       60.40       4.95   2740        1  \n",
              "39       6.57       80.40       1.92   8200        1  \n",
              "40       5.39       56.30       5.27   1220        0  \n",
              "41       0.82       76.30       1.55  13500        1  \n",
              "42       2.01       79.90       1.42  30800        1  \n",
              "43      -1.43       77.50       1.51  19800        1  \n",
              "44       3.22       79.50       1.87  58000        2  \n",
              "45       5.44       74.60       2.60   5450        1  \n",
              "46       7.47       76.70       2.66   4660        1  \n",
              "47      10.10       70.50       3.19   2600        1  \n",
              "48       2.65       74.10       2.27   2990        1  \n",
              "49      24.90       60.90       5.21  17100        0  \n",
              "50      11.60       61.70       4.61    482        1  \n",
              "51       1.74       76.00       1.72  14600        1  \n",
              "52       4.23       65.30       2.67   3650        1  \n",
              "53       0.35       80.00       1.87  46200        2  \n",
              "54       1.05       81.40       2.03  40600        1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dbe4621e-1dfa-4afb-b36b-616b11bfe612\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>child_mort</th>\n",
              "      <th>exports</th>\n",
              "      <th>health</th>\n",
              "      <th>imports</th>\n",
              "      <th>income</th>\n",
              "      <th>inflation</th>\n",
              "      <th>life_expec</th>\n",
              "      <th>total_fer</th>\n",
              "      <th>gdpp</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>90.20</td>\n",
              "      <td>10.00</td>\n",
              "      <td>7.58</td>\n",
              "      <td>44.90</td>\n",
              "      <td>1610</td>\n",
              "      <td>9.44</td>\n",
              "      <td>56.20</td>\n",
              "      <td>5.82</td>\n",
              "      <td>553</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>16.60</td>\n",
              "      <td>28.00</td>\n",
              "      <td>6.55</td>\n",
              "      <td>48.60</td>\n",
              "      <td>9930</td>\n",
              "      <td>4.49</td>\n",
              "      <td>76.30</td>\n",
              "      <td>1.65</td>\n",
              "      <td>4090</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>27.30</td>\n",
              "      <td>38.40</td>\n",
              "      <td>4.17</td>\n",
              "      <td>31.40</td>\n",
              "      <td>12900</td>\n",
              "      <td>16.10</td>\n",
              "      <td>76.50</td>\n",
              "      <td>2.89</td>\n",
              "      <td>4460</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Angola</td>\n",
              "      <td>119.00</td>\n",
              "      <td>62.30</td>\n",
              "      <td>2.85</td>\n",
              "      <td>42.90</td>\n",
              "      <td>5900</td>\n",
              "      <td>22.40</td>\n",
              "      <td>60.10</td>\n",
              "      <td>6.16</td>\n",
              "      <td>3530</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>10.30</td>\n",
              "      <td>45.50</td>\n",
              "      <td>6.03</td>\n",
              "      <td>58.90</td>\n",
              "      <td>19100</td>\n",
              "      <td>1.44</td>\n",
              "      <td>76.80</td>\n",
              "      <td>2.13</td>\n",
              "      <td>12200</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Argentina</td>\n",
              "      <td>14.50</td>\n",
              "      <td>18.90</td>\n",
              "      <td>8.10</td>\n",
              "      <td>16.00</td>\n",
              "      <td>18700</td>\n",
              "      <td>20.90</td>\n",
              "      <td>75.80</td>\n",
              "      <td>2.37</td>\n",
              "      <td>10300</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Armenia</td>\n",
              "      <td>18.10</td>\n",
              "      <td>20.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>45.30</td>\n",
              "      <td>6700</td>\n",
              "      <td>7.77</td>\n",
              "      <td>73.30</td>\n",
              "      <td>1.69</td>\n",
              "      <td>3220</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Australia</td>\n",
              "      <td>4.80</td>\n",
              "      <td>19.80</td>\n",
              "      <td>8.73</td>\n",
              "      <td>20.90</td>\n",
              "      <td>41400</td>\n",
              "      <td>1.16</td>\n",
              "      <td>82.00</td>\n",
              "      <td>1.93</td>\n",
              "      <td>51900</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Austria</td>\n",
              "      <td>4.30</td>\n",
              "      <td>51.30</td>\n",
              "      <td>11.00</td>\n",
              "      <td>47.80</td>\n",
              "      <td>43200</td>\n",
              "      <td>0.87</td>\n",
              "      <td>80.50</td>\n",
              "      <td>1.44</td>\n",
              "      <td>46900</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Azerbaijan</td>\n",
              "      <td>39.20</td>\n",
              "      <td>54.30</td>\n",
              "      <td>5.88</td>\n",
              "      <td>20.70</td>\n",
              "      <td>16000</td>\n",
              "      <td>13.80</td>\n",
              "      <td>69.10</td>\n",
              "      <td>1.92</td>\n",
              "      <td>5840</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Bahamas</td>\n",
              "      <td>13.80</td>\n",
              "      <td>35.00</td>\n",
              "      <td>7.89</td>\n",
              "      <td>43.70</td>\n",
              "      <td>22900</td>\n",
              "      <td>-0.39</td>\n",
              "      <td>73.80</td>\n",
              "      <td>1.86</td>\n",
              "      <td>28000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bahrain</td>\n",
              "      <td>8.60</td>\n",
              "      <td>69.50</td>\n",
              "      <td>4.97</td>\n",
              "      <td>50.90</td>\n",
              "      <td>41100</td>\n",
              "      <td>7.44</td>\n",
              "      <td>76.00</td>\n",
              "      <td>2.16</td>\n",
              "      <td>20700</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bangladesh</td>\n",
              "      <td>49.40</td>\n",
              "      <td>16.00</td>\n",
              "      <td>3.52</td>\n",
              "      <td>21.80</td>\n",
              "      <td>2440</td>\n",
              "      <td>7.14</td>\n",
              "      <td>70.40</td>\n",
              "      <td>2.33</td>\n",
              "      <td>758</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Barbados</td>\n",
              "      <td>14.20</td>\n",
              "      <td>39.50</td>\n",
              "      <td>7.97</td>\n",
              "      <td>48.70</td>\n",
              "      <td>15300</td>\n",
              "      <td>0.32</td>\n",
              "      <td>76.70</td>\n",
              "      <td>1.78</td>\n",
              "      <td>16000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Belarus</td>\n",
              "      <td>5.50</td>\n",
              "      <td>51.40</td>\n",
              "      <td>5.61</td>\n",
              "      <td>64.50</td>\n",
              "      <td>16200</td>\n",
              "      <td>15.10</td>\n",
              "      <td>70.40</td>\n",
              "      <td>1.49</td>\n",
              "      <td>6030</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>4.50</td>\n",
              "      <td>76.40</td>\n",
              "      <td>10.70</td>\n",
              "      <td>74.70</td>\n",
              "      <td>41100</td>\n",
              "      <td>1.88</td>\n",
              "      <td>80.00</td>\n",
              "      <td>1.86</td>\n",
              "      <td>44400</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Belize</td>\n",
              "      <td>18.80</td>\n",
              "      <td>58.20</td>\n",
              "      <td>5.20</td>\n",
              "      <td>57.50</td>\n",
              "      <td>7880</td>\n",
              "      <td>1.14</td>\n",
              "      <td>71.40</td>\n",
              "      <td>2.71</td>\n",
              "      <td>4340</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Benin</td>\n",
              "      <td>111.00</td>\n",
              "      <td>23.80</td>\n",
              "      <td>4.10</td>\n",
              "      <td>37.20</td>\n",
              "      <td>1820</td>\n",
              "      <td>0.89</td>\n",
              "      <td>61.80</td>\n",
              "      <td>5.36</td>\n",
              "      <td>758</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Bhutan</td>\n",
              "      <td>42.70</td>\n",
              "      <td>42.50</td>\n",
              "      <td>5.20</td>\n",
              "      <td>70.70</td>\n",
              "      <td>6420</td>\n",
              "      <td>5.99</td>\n",
              "      <td>72.10</td>\n",
              "      <td>2.38</td>\n",
              "      <td>2180</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Bolivia</td>\n",
              "      <td>46.60</td>\n",
              "      <td>41.20</td>\n",
              "      <td>4.84</td>\n",
              "      <td>34.30</td>\n",
              "      <td>5410</td>\n",
              "      <td>8.78</td>\n",
              "      <td>71.60</td>\n",
              "      <td>3.20</td>\n",
              "      <td>1980</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Bosnia and Herzegovina</td>\n",
              "      <td>6.90</td>\n",
              "      <td>29.70</td>\n",
              "      <td>11.10</td>\n",
              "      <td>51.30</td>\n",
              "      <td>9720</td>\n",
              "      <td>1.40</td>\n",
              "      <td>76.80</td>\n",
              "      <td>1.31</td>\n",
              "      <td>4610</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Botswana</td>\n",
              "      <td>52.50</td>\n",
              "      <td>43.60</td>\n",
              "      <td>8.30</td>\n",
              "      <td>51.30</td>\n",
              "      <td>13300</td>\n",
              "      <td>8.92</td>\n",
              "      <td>57.10</td>\n",
              "      <td>2.88</td>\n",
              "      <td>6350</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>19.80</td>\n",
              "      <td>10.70</td>\n",
              "      <td>9.01</td>\n",
              "      <td>11.80</td>\n",
              "      <td>14500</td>\n",
              "      <td>8.41</td>\n",
              "      <td>74.20</td>\n",
              "      <td>1.80</td>\n",
              "      <td>11200</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Brunei</td>\n",
              "      <td>10.50</td>\n",
              "      <td>67.40</td>\n",
              "      <td>2.84</td>\n",
              "      <td>28.00</td>\n",
              "      <td>80600</td>\n",
              "      <td>16.70</td>\n",
              "      <td>77.10</td>\n",
              "      <td>1.84</td>\n",
              "      <td>35300</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Bulgaria</td>\n",
              "      <td>10.80</td>\n",
              "      <td>50.20</td>\n",
              "      <td>6.87</td>\n",
              "      <td>53.00</td>\n",
              "      <td>15300</td>\n",
              "      <td>1.11</td>\n",
              "      <td>73.90</td>\n",
              "      <td>1.57</td>\n",
              "      <td>6840</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Burkina Faso</td>\n",
              "      <td>116.00</td>\n",
              "      <td>19.20</td>\n",
              "      <td>6.74</td>\n",
              "      <td>29.60</td>\n",
              "      <td>1430</td>\n",
              "      <td>6.81</td>\n",
              "      <td>57.90</td>\n",
              "      <td>5.87</td>\n",
              "      <td>575</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Burundi</td>\n",
              "      <td>93.60</td>\n",
              "      <td>8.92</td>\n",
              "      <td>11.60</td>\n",
              "      <td>39.20</td>\n",
              "      <td>764</td>\n",
              "      <td>12.30</td>\n",
              "      <td>57.70</td>\n",
              "      <td>6.26</td>\n",
              "      <td>231</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Cambodia</td>\n",
              "      <td>44.40</td>\n",
              "      <td>54.10</td>\n",
              "      <td>5.68</td>\n",
              "      <td>59.50</td>\n",
              "      <td>2520</td>\n",
              "      <td>3.12</td>\n",
              "      <td>66.10</td>\n",
              "      <td>2.88</td>\n",
              "      <td>786</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Cameroon</td>\n",
              "      <td>108.00</td>\n",
              "      <td>22.20</td>\n",
              "      <td>5.13</td>\n",
              "      <td>27.00</td>\n",
              "      <td>2660</td>\n",
              "      <td>1.91</td>\n",
              "      <td>57.30</td>\n",
              "      <td>5.11</td>\n",
              "      <td>1310</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Canada</td>\n",
              "      <td>5.60</td>\n",
              "      <td>29.10</td>\n",
              "      <td>11.30</td>\n",
              "      <td>31.00</td>\n",
              "      <td>40700</td>\n",
              "      <td>2.87</td>\n",
              "      <td>81.30</td>\n",
              "      <td>1.63</td>\n",
              "      <td>47400</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Cape Verde</td>\n",
              "      <td>26.50</td>\n",
              "      <td>32.70</td>\n",
              "      <td>4.09</td>\n",
              "      <td>61.80</td>\n",
              "      <td>5830</td>\n",
              "      <td>0.51</td>\n",
              "      <td>72.50</td>\n",
              "      <td>2.67</td>\n",
              "      <td>3310</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Central African Republic</td>\n",
              "      <td>149.00</td>\n",
              "      <td>11.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>26.50</td>\n",
              "      <td>888</td>\n",
              "      <td>2.01</td>\n",
              "      <td>47.50</td>\n",
              "      <td>5.21</td>\n",
              "      <td>446</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Chad</td>\n",
              "      <td>150.00</td>\n",
              "      <td>36.80</td>\n",
              "      <td>4.53</td>\n",
              "      <td>43.50</td>\n",
              "      <td>1930</td>\n",
              "      <td>6.39</td>\n",
              "      <td>56.50</td>\n",
              "      <td>6.59</td>\n",
              "      <td>897</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Chile</td>\n",
              "      <td>8.70</td>\n",
              "      <td>37.70</td>\n",
              "      <td>7.96</td>\n",
              "      <td>31.30</td>\n",
              "      <td>19400</td>\n",
              "      <td>8.96</td>\n",
              "      <td>79.10</td>\n",
              "      <td>1.88</td>\n",
              "      <td>12900</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>China</td>\n",
              "      <td>15.70</td>\n",
              "      <td>26.30</td>\n",
              "      <td>5.07</td>\n",
              "      <td>22.60</td>\n",
              "      <td>9530</td>\n",
              "      <td>6.94</td>\n",
              "      <td>74.60</td>\n",
              "      <td>1.59</td>\n",
              "      <td>4560</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>18.60</td>\n",
              "      <td>15.90</td>\n",
              "      <td>7.59</td>\n",
              "      <td>17.80</td>\n",
              "      <td>10900</td>\n",
              "      <td>3.86</td>\n",
              "      <td>76.40</td>\n",
              "      <td>2.01</td>\n",
              "      <td>6250</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Comoros</td>\n",
              "      <td>88.20</td>\n",
              "      <td>16.50</td>\n",
              "      <td>4.51</td>\n",
              "      <td>51.70</td>\n",
              "      <td>1410</td>\n",
              "      <td>3.87</td>\n",
              "      <td>65.90</td>\n",
              "      <td>4.75</td>\n",
              "      <td>769</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Congo, Dem. Rep.</td>\n",
              "      <td>116.00</td>\n",
              "      <td>41.10</td>\n",
              "      <td>7.91</td>\n",
              "      <td>49.60</td>\n",
              "      <td>609</td>\n",
              "      <td>20.80</td>\n",
              "      <td>57.50</td>\n",
              "      <td>6.54</td>\n",
              "      <td>334</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Congo, Rep.</td>\n",
              "      <td>63.90</td>\n",
              "      <td>85.10</td>\n",
              "      <td>2.46</td>\n",
              "      <td>54.70</td>\n",
              "      <td>5190</td>\n",
              "      <td>20.70</td>\n",
              "      <td>60.40</td>\n",
              "      <td>4.95</td>\n",
              "      <td>2740</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>10.20</td>\n",
              "      <td>33.20</td>\n",
              "      <td>10.90</td>\n",
              "      <td>35.00</td>\n",
              "      <td>13000</td>\n",
              "      <td>6.57</td>\n",
              "      <td>80.40</td>\n",
              "      <td>1.92</td>\n",
              "      <td>8200</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Cote d'Ivoire</td>\n",
              "      <td>111.00</td>\n",
              "      <td>50.60</td>\n",
              "      <td>5.30</td>\n",
              "      <td>43.30</td>\n",
              "      <td>2690</td>\n",
              "      <td>5.39</td>\n",
              "      <td>56.30</td>\n",
              "      <td>5.27</td>\n",
              "      <td>1220</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Croatia</td>\n",
              "      <td>5.50</td>\n",
              "      <td>37.60</td>\n",
              "      <td>7.76</td>\n",
              "      <td>38.10</td>\n",
              "      <td>20100</td>\n",
              "      <td>0.82</td>\n",
              "      <td>76.30</td>\n",
              "      <td>1.55</td>\n",
              "      <td>13500</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Cyprus</td>\n",
              "      <td>3.60</td>\n",
              "      <td>50.20</td>\n",
              "      <td>5.97</td>\n",
              "      <td>57.50</td>\n",
              "      <td>33900</td>\n",
              "      <td>2.01</td>\n",
              "      <td>79.90</td>\n",
              "      <td>1.42</td>\n",
              "      <td>30800</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Czech Republic</td>\n",
              "      <td>3.40</td>\n",
              "      <td>66.00</td>\n",
              "      <td>7.88</td>\n",
              "      <td>62.90</td>\n",
              "      <td>28300</td>\n",
              "      <td>-1.43</td>\n",
              "      <td>77.50</td>\n",
              "      <td>1.51</td>\n",
              "      <td>19800</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Denmark</td>\n",
              "      <td>4.10</td>\n",
              "      <td>50.50</td>\n",
              "      <td>11.40</td>\n",
              "      <td>43.60</td>\n",
              "      <td>44000</td>\n",
              "      <td>3.22</td>\n",
              "      <td>79.50</td>\n",
              "      <td>1.87</td>\n",
              "      <td>58000</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>34.40</td>\n",
              "      <td>22.70</td>\n",
              "      <td>6.22</td>\n",
              "      <td>33.30</td>\n",
              "      <td>11100</td>\n",
              "      <td>5.44</td>\n",
              "      <td>74.60</td>\n",
              "      <td>2.60</td>\n",
              "      <td>5450</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Ecuador</td>\n",
              "      <td>25.10</td>\n",
              "      <td>27.90</td>\n",
              "      <td>8.06</td>\n",
              "      <td>32.40</td>\n",
              "      <td>9350</td>\n",
              "      <td>7.47</td>\n",
              "      <td>76.70</td>\n",
              "      <td>2.66</td>\n",
              "      <td>4660</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Egypt</td>\n",
              "      <td>29.10</td>\n",
              "      <td>21.30</td>\n",
              "      <td>4.66</td>\n",
              "      <td>26.60</td>\n",
              "      <td>9860</td>\n",
              "      <td>10.10</td>\n",
              "      <td>70.50</td>\n",
              "      <td>3.19</td>\n",
              "      <td>2600</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>El Salvador</td>\n",
              "      <td>19.20</td>\n",
              "      <td>26.90</td>\n",
              "      <td>6.91</td>\n",
              "      <td>46.60</td>\n",
              "      <td>7300</td>\n",
              "      <td>2.65</td>\n",
              "      <td>74.10</td>\n",
              "      <td>2.27</td>\n",
              "      <td>2990</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Equatorial Guinea</td>\n",
              "      <td>111.00</td>\n",
              "      <td>85.80</td>\n",
              "      <td>4.48</td>\n",
              "      <td>58.90</td>\n",
              "      <td>33700</td>\n",
              "      <td>24.90</td>\n",
              "      <td>60.90</td>\n",
              "      <td>5.21</td>\n",
              "      <td>17100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Eritrea</td>\n",
              "      <td>55.20</td>\n",
              "      <td>4.79</td>\n",
              "      <td>2.66</td>\n",
              "      <td>23.30</td>\n",
              "      <td>1420</td>\n",
              "      <td>11.60</td>\n",
              "      <td>61.70</td>\n",
              "      <td>4.61</td>\n",
              "      <td>482</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Estonia</td>\n",
              "      <td>4.50</td>\n",
              "      <td>75.10</td>\n",
              "      <td>6.03</td>\n",
              "      <td>68.70</td>\n",
              "      <td>22700</td>\n",
              "      <td>1.74</td>\n",
              "      <td>76.00</td>\n",
              "      <td>1.72</td>\n",
              "      <td>14600</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Fiji</td>\n",
              "      <td>24.10</td>\n",
              "      <td>57.80</td>\n",
              "      <td>4.86</td>\n",
              "      <td>63.90</td>\n",
              "      <td>7350</td>\n",
              "      <td>4.23</td>\n",
              "      <td>65.30</td>\n",
              "      <td>2.67</td>\n",
              "      <td>3650</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Finland</td>\n",
              "      <td>3.00</td>\n",
              "      <td>38.70</td>\n",
              "      <td>8.95</td>\n",
              "      <td>37.40</td>\n",
              "      <td>39800</td>\n",
              "      <td>0.35</td>\n",
              "      <td>80.00</td>\n",
              "      <td>1.87</td>\n",
              "      <td>46200</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>France</td>\n",
              "      <td>4.20</td>\n",
              "      <td>26.80</td>\n",
              "      <td>11.90</td>\n",
              "      <td>28.10</td>\n",
              "      <td>36900</td>\n",
              "      <td>1.05</td>\n",
              "      <td>81.40</td>\n",
              "      <td>2.03</td>\n",
              "      <td>40600</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dbe4621e-1dfa-4afb-b36b-616b11bfe612')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dbe4621e-1dfa-4afb-b36b-616b11bfe612 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dbe4621e-1dfa-4afb-b36b-616b11bfe612');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f1203334-06a9-45c7-b85d-26e5c64c1e0e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f1203334-06a9-45c7-b85d-26e5c64c1e0e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f1203334-06a9-45c7-b85d-26e5c64c1e0e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "finaldf",
              "summary": "{\n  \"name\": \"finaldf\",\n  \"rows\": 167,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 167,\n        \"samples\": [\n          \"Micronesia, Fed. Sts.\",\n          \"Namibia\",\n          \"Jordan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"child_mort\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.32893145927617,\n        \"min\": 2.6,\n        \"max\": 208.0,\n        \"num_unique_values\": 139,\n        \"samples\": [\n          17.1,\n          36.9,\n          149.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.41201011142416,\n        \"min\": 0.109,\n        \"max\": 200.0,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          28.6,\n          57.8,\n          20.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7468374978890795,\n        \"min\": 1.81,\n        \"max\": 17.9,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          9.54,\n          8.95,\n          3.66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24.209588976108698,\n        \"min\": 0.0659,\n        \"max\": 174.0,\n        \"num_unique_values\": 151,\n        \"samples\": [\n          79.9,\n          70.7,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19278,\n        \"min\": 609,\n        \"max\": 125000,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          7710,\n          17400,\n          18300\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"inflation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.570703901430559,\n        \"min\": -4.21,\n        \"max\": 104.0,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          3.8,\n          -3.22,\n          0.238\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"life_expec\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.893171908900408,\n        \"min\": 32.1,\n        \"max\": 82.8,\n        \"num_unique_values\": 127,\n        \"samples\": [\n          57.3,\n          81.5,\n          68.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_fer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5138475432630463,\n        \"min\": 1.15,\n        \"max\": 7.49,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          1.27,\n          3.16,\n          2.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gdpp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18328,\n        \"min\": 231,\n        \"max\": 105000,\n        \"num_unique_values\": 157,\n        \"samples\": [\n          10800,\n          4660,\n          22100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Then, the 3d-plot of the resulting clusters will be shown as here."
      ],
      "metadata": {
        "id": "b2MswuBc-tz4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = df1[['Health', 'Trade', 'Finance']].values\n",
        "plot_3d_clusters(data, clusters, centers)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 675
        },
        "id": "kuXUH7WIbASZ",
        "outputId": "8239dc2c-68c1-4af7-c049-ee888c222f3a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###PART 5 : FINAL COUNTRY URGENCY DATA RESULTS"
      ],
      "metadata": {
        "id": "fkJLPm4pF25H"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Although the countries have been clustered successfully (and the 3d plot looks okay too, haha) there is still needed information on what each cluster represents.\n",
        "\n",
        "> The 2 original features of \"**child-mortality**\" and \"**income**\" are found to be able to *differentiate* the clusters well."
      ],
      "metadata": {
        "id": "U1AvveX3-4lk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Create the subplots\n",
        "fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(15, 5))\n",
        "\n",
        "# Plot the child_mort vs Class chart\n",
        "sns.boxplot(x='Cluster', y='child_mort', data=finaldf, ax=ax1, color='#FF781F')\n",
        "ax1.set_title('Child Mortality vs Class')\n",
        "ax1.set_xlabel('Class')\n",
        "ax1.set_ylabel('Child Mortality')\n",
        "\n",
        "# Plot the income vs Class chart\n",
        "sns.boxplot(x='Cluster', y='income', data=finaldf, ax=ax2, color='#FF781F')\n",
        "ax2.set_title('Income vs Class')\n",
        "ax2.set_xlabel('Class')\n",
        "ax2.set_ylabel('Income')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "id": "Rt5QiW-l945J",
        "outputId": "7cd43275-27da-4dac-fa1e-036652cce777"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Based on the data above:\n",
        ">* Cluster 0 --> high child mortality and low income --> the country is in danger zone\n",
        ">* Cluster 1 --> low child mortality and mid income --> the country can qualify for assistance\n",
        ">* Cluster 2 --> extremely low child mortality and high income --> the country is doing well\n"
      ],
      "metadata": {
        "id": "VKN1Nz1lT6Qj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "> For the final step, let's re-define the cluster based on these meanings."
      ],
      "metadata": {
        "id": "5KGMxeHKBvy8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the mapping from cluster numbers to labels\n",
        "finalresults_labels = {\n",
        "    0: 'immediate attention required',\n",
        "    1: 'assistance may be needed',\n",
        "    2: 'good conditions achieved'\n",
        "}\n",
        "\n",
        "# Use the replace method to apply the mapping\n",
        "finaldf['Cluster'] = finaldf['Cluster'].replace(finalresults_labels)\n",
        "\n",
        "# Now finaldf['Cluster'] contains the updated labels based on the mapping\n",
        "finaldf.head(55)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "rdufwpOUT48L",
        "outputId": "cdaf507b-a0c0-48da-f41c-bdd3d734cb2f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     country  child_mort  exports  health  imports  income  \\\n",
              "0                Afghanistan       90.20    10.00    7.58    44.90    1610   \n",
              "1                    Albania       16.60    28.00    6.55    48.60    9930   \n",
              "2                    Algeria       27.30    38.40    4.17    31.40   12900   \n",
              "3                     Angola      119.00    62.30    2.85    42.90    5900   \n",
              "4        Antigua and Barbuda       10.30    45.50    6.03    58.90   19100   \n",
              "5                  Argentina       14.50    18.90    8.10    16.00   18700   \n",
              "6                    Armenia       18.10    20.80    4.40    45.30    6700   \n",
              "7                  Australia        4.80    19.80    8.73    20.90   41400   \n",
              "8                    Austria        4.30    51.30   11.00    47.80   43200   \n",
              "9                 Azerbaijan       39.20    54.30    5.88    20.70   16000   \n",
              "10                   Bahamas       13.80    35.00    7.89    43.70   22900   \n",
              "11                   Bahrain        8.60    69.50    4.97    50.90   41100   \n",
              "12                Bangladesh       49.40    16.00    3.52    21.80    2440   \n",
              "13                  Barbados       14.20    39.50    7.97    48.70   15300   \n",
              "14                   Belarus        5.50    51.40    5.61    64.50   16200   \n",
              "15                   Belgium        4.50    76.40   10.70    74.70   41100   \n",
              "16                    Belize       18.80    58.20    5.20    57.50    7880   \n",
              "17                     Benin      111.00    23.80    4.10    37.20    1820   \n",
              "18                    Bhutan       42.70    42.50    5.20    70.70    6420   \n",
              "19                   Bolivia       46.60    41.20    4.84    34.30    5410   \n",
              "20    Bosnia and Herzegovina        6.90    29.70   11.10    51.30    9720   \n",
              "21                  Botswana       52.50    43.60    8.30    51.30   13300   \n",
              "22                    Brazil       19.80    10.70    9.01    11.80   14500   \n",
              "23                    Brunei       10.50    67.40    2.84    28.00   80600   \n",
              "24                  Bulgaria       10.80    50.20    6.87    53.00   15300   \n",
              "25              Burkina Faso      116.00    19.20    6.74    29.60    1430   \n",
              "26                   Burundi       93.60     8.92   11.60    39.20     764   \n",
              "27                  Cambodia       44.40    54.10    5.68    59.50    2520   \n",
              "28                  Cameroon      108.00    22.20    5.13    27.00    2660   \n",
              "29                    Canada        5.60    29.10   11.30    31.00   40700   \n",
              "30                Cape Verde       26.50    32.70    4.09    61.80    5830   \n",
              "31  Central African Republic      149.00    11.80    3.98    26.50     888   \n",
              "32                      Chad      150.00    36.80    4.53    43.50    1930   \n",
              "33                     Chile        8.70    37.70    7.96    31.30   19400   \n",
              "34                     China       15.70    26.30    5.07    22.60    9530   \n",
              "35                  Colombia       18.60    15.90    7.59    17.80   10900   \n",
              "36                   Comoros       88.20    16.50    4.51    51.70    1410   \n",
              "37          Congo, Dem. Rep.      116.00    41.10    7.91    49.60     609   \n",
              "38               Congo, Rep.       63.90    85.10    2.46    54.70    5190   \n",
              "39                Costa Rica       10.20    33.20   10.90    35.00   13000   \n",
              "40             Cote d'Ivoire      111.00    50.60    5.30    43.30    2690   \n",
              "41                   Croatia        5.50    37.60    7.76    38.10   20100   \n",
              "42                    Cyprus        3.60    50.20    5.97    57.50   33900   \n",
              "43            Czech Republic        3.40    66.00    7.88    62.90   28300   \n",
              "44                   Denmark        4.10    50.50   11.40    43.60   44000   \n",
              "45        Dominican Republic       34.40    22.70    6.22    33.30   11100   \n",
              "46                   Ecuador       25.10    27.90    8.06    32.40    9350   \n",
              "47                     Egypt       29.10    21.30    4.66    26.60    9860   \n",
              "48               El Salvador       19.20    26.90    6.91    46.60    7300   \n",
              "49         Equatorial Guinea      111.00    85.80    4.48    58.90   33700   \n",
              "50                   Eritrea       55.20     4.79    2.66    23.30    1420   \n",
              "51                   Estonia        4.50    75.10    6.03    68.70   22700   \n",
              "52                      Fiji       24.10    57.80    4.86    63.90    7350   \n",
              "53                   Finland        3.00    38.70    8.95    37.40   39800   \n",
              "54                    France        4.20    26.80   11.90    28.10   36900   \n",
              "\n",
              "    inflation  life_expec  total_fer   gdpp                       Cluster  \n",
              "0        9.44       56.20       5.82    553  immediate attention required  \n",
              "1        4.49       76.30       1.65   4090      assistance may be needed  \n",
              "2       16.10       76.50       2.89   4460      assistance may be needed  \n",
              "3       22.40       60.10       6.16   3530  immediate attention required  \n",
              "4        1.44       76.80       2.13  12200      assistance may be needed  \n",
              "5       20.90       75.80       2.37  10300      assistance may be needed  \n",
              "6        7.77       73.30       1.69   3220      assistance may be needed  \n",
              "7        1.16       82.00       1.93  51900      good conditions achieved  \n",
              "8        0.87       80.50       1.44  46900      good conditions achieved  \n",
              "9       13.80       69.10       1.92   5840      assistance may be needed  \n",
              "10      -0.39       73.80       1.86  28000      assistance may be needed  \n",
              "11       7.44       76.00       2.16  20700      good conditions achieved  \n",
              "12       7.14       70.40       2.33    758      assistance may be needed  \n",
              "13       0.32       76.70       1.78  16000      assistance may be needed  \n",
              "14      15.10       70.40       1.49   6030      assistance may be needed  \n",
              "15       1.88       80.00       1.86  44400      good conditions achieved  \n",
              "16       1.14       71.40       2.71   4340      assistance may be needed  \n",
              "17       0.89       61.80       5.36    758  immediate attention required  \n",
              "18       5.99       72.10       2.38   2180      assistance may be needed  \n",
              "19       8.78       71.60       3.20   1980      assistance may be needed  \n",
              "20       1.40       76.80       1.31   4610      assistance may be needed  \n",
              "21       8.92       57.10       2.88   6350      assistance may be needed  \n",
              "22       8.41       74.20       1.80  11200      assistance may be needed  \n",
              "23      16.70       77.10       1.84  35300      good conditions achieved  \n",
              "24       1.11       73.90       1.57   6840      assistance may be needed  \n",
              "25       6.81       57.90       5.87    575  immediate attention required  \n",
              "26      12.30       57.70       6.26    231  immediate attention required  \n",
              "27       3.12       66.10       2.88    786      assistance may be needed  \n",
              "28       1.91       57.30       5.11   1310  immediate attention required  \n",
              "29       2.87       81.30       1.63  47400      good conditions achieved  \n",
              "30       0.51       72.50       2.67   3310      assistance may be needed  \n",
              "31       2.01       47.50       5.21    446  immediate attention required  \n",
              "32       6.39       56.50       6.59    897  immediate attention required  \n",
              "33       8.96       79.10       1.88  12900      assistance may be needed  \n",
              "34       6.94       74.60       1.59   4560      assistance may be needed  \n",
              "35       3.86       76.40       2.01   6250      assistance may be needed  \n",
              "36       3.87       65.90       4.75    769  immediate attention required  \n",
              "37      20.80       57.50       6.54    334  immediate attention required  \n",
              "38      20.70       60.40       4.95   2740      assistance may be needed  \n",
              "39       6.57       80.40       1.92   8200      assistance may be needed  \n",
              "40       5.39       56.30       5.27   1220  immediate attention required  \n",
              "41       0.82       76.30       1.55  13500      assistance may be needed  \n",
              "42       2.01       79.90       1.42  30800      assistance may be needed  \n",
              "43      -1.43       77.50       1.51  19800      assistance may be needed  \n",
              "44       3.22       79.50       1.87  58000      good conditions achieved  \n",
              "45       5.44       74.60       2.60   5450      assistance may be needed  \n",
              "46       7.47       76.70       2.66   4660      assistance may be needed  \n",
              "47      10.10       70.50       3.19   2600      assistance may be needed  \n",
              "48       2.65       74.10       2.27   2990      assistance may be needed  \n",
              "49      24.90       60.90       5.21  17100  immediate attention required  \n",
              "50      11.60       61.70       4.61    482      assistance may be needed  \n",
              "51       1.74       76.00       1.72  14600      assistance may be needed  \n",
              "52       4.23       65.30       2.67   3650      assistance may be needed  \n",
              "53       0.35       80.00       1.87  46200      good conditions achieved  \n",
              "54       1.05       81.40       2.03  40600      assistance may be needed  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-04cb0735-e1ea-4dcb-94a0-961cae518b04\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>child_mort</th>\n",
              "      <th>exports</th>\n",
              "      <th>health</th>\n",
              "      <th>imports</th>\n",
              "      <th>income</th>\n",
              "      <th>inflation</th>\n",
              "      <th>life_expec</th>\n",
              "      <th>total_fer</th>\n",
              "      <th>gdpp</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>90.20</td>\n",
              "      <td>10.00</td>\n",
              "      <td>7.58</td>\n",
              "      <td>44.90</td>\n",
              "      <td>1610</td>\n",
              "      <td>9.44</td>\n",
              "      <td>56.20</td>\n",
              "      <td>5.82</td>\n",
              "      <td>553</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Albania</td>\n",
              "      <td>16.60</td>\n",
              "      <td>28.00</td>\n",
              "      <td>6.55</td>\n",
              "      <td>48.60</td>\n",
              "      <td>9930</td>\n",
              "      <td>4.49</td>\n",
              "      <td>76.30</td>\n",
              "      <td>1.65</td>\n",
              "      <td>4090</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Algeria</td>\n",
              "      <td>27.30</td>\n",
              "      <td>38.40</td>\n",
              "      <td>4.17</td>\n",
              "      <td>31.40</td>\n",
              "      <td>12900</td>\n",
              "      <td>16.10</td>\n",
              "      <td>76.50</td>\n",
              "      <td>2.89</td>\n",
              "      <td>4460</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Angola</td>\n",
              "      <td>119.00</td>\n",
              "      <td>62.30</td>\n",
              "      <td>2.85</td>\n",
              "      <td>42.90</td>\n",
              "      <td>5900</td>\n",
              "      <td>22.40</td>\n",
              "      <td>60.10</td>\n",
              "      <td>6.16</td>\n",
              "      <td>3530</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>10.30</td>\n",
              "      <td>45.50</td>\n",
              "      <td>6.03</td>\n",
              "      <td>58.90</td>\n",
              "      <td>19100</td>\n",
              "      <td>1.44</td>\n",
              "      <td>76.80</td>\n",
              "      <td>2.13</td>\n",
              "      <td>12200</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Argentina</td>\n",
              "      <td>14.50</td>\n",
              "      <td>18.90</td>\n",
              "      <td>8.10</td>\n",
              "      <td>16.00</td>\n",
              "      <td>18700</td>\n",
              "      <td>20.90</td>\n",
              "      <td>75.80</td>\n",
              "      <td>2.37</td>\n",
              "      <td>10300</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Armenia</td>\n",
              "      <td>18.10</td>\n",
              "      <td>20.80</td>\n",
              "      <td>4.40</td>\n",
              "      <td>45.30</td>\n",
              "      <td>6700</td>\n",
              "      <td>7.77</td>\n",
              "      <td>73.30</td>\n",
              "      <td>1.69</td>\n",
              "      <td>3220</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Australia</td>\n",
              "      <td>4.80</td>\n",
              "      <td>19.80</td>\n",
              "      <td>8.73</td>\n",
              "      <td>20.90</td>\n",
              "      <td>41400</td>\n",
              "      <td>1.16</td>\n",
              "      <td>82.00</td>\n",
              "      <td>1.93</td>\n",
              "      <td>51900</td>\n",
              "      <td>good conditions achieved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Austria</td>\n",
              "      <td>4.30</td>\n",
              "      <td>51.30</td>\n",
              "      <td>11.00</td>\n",
              "      <td>47.80</td>\n",
              "      <td>43200</td>\n",
              "      <td>0.87</td>\n",
              "      <td>80.50</td>\n",
              "      <td>1.44</td>\n",
              "      <td>46900</td>\n",
              "      <td>good conditions achieved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Azerbaijan</td>\n",
              "      <td>39.20</td>\n",
              "      <td>54.30</td>\n",
              "      <td>5.88</td>\n",
              "      <td>20.70</td>\n",
              "      <td>16000</td>\n",
              "      <td>13.80</td>\n",
              "      <td>69.10</td>\n",
              "      <td>1.92</td>\n",
              "      <td>5840</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Bahamas</td>\n",
              "      <td>13.80</td>\n",
              "      <td>35.00</td>\n",
              "      <td>7.89</td>\n",
              "      <td>43.70</td>\n",
              "      <td>22900</td>\n",
              "      <td>-0.39</td>\n",
              "      <td>73.80</td>\n",
              "      <td>1.86</td>\n",
              "      <td>28000</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bahrain</td>\n",
              "      <td>8.60</td>\n",
              "      <td>69.50</td>\n",
              "      <td>4.97</td>\n",
              "      <td>50.90</td>\n",
              "      <td>41100</td>\n",
              "      <td>7.44</td>\n",
              "      <td>76.00</td>\n",
              "      <td>2.16</td>\n",
              "      <td>20700</td>\n",
              "      <td>good conditions achieved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bangladesh</td>\n",
              "      <td>49.40</td>\n",
              "      <td>16.00</td>\n",
              "      <td>3.52</td>\n",
              "      <td>21.80</td>\n",
              "      <td>2440</td>\n",
              "      <td>7.14</td>\n",
              "      <td>70.40</td>\n",
              "      <td>2.33</td>\n",
              "      <td>758</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Barbados</td>\n",
              "      <td>14.20</td>\n",
              "      <td>39.50</td>\n",
              "      <td>7.97</td>\n",
              "      <td>48.70</td>\n",
              "      <td>15300</td>\n",
              "      <td>0.32</td>\n",
              "      <td>76.70</td>\n",
              "      <td>1.78</td>\n",
              "      <td>16000</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Belarus</td>\n",
              "      <td>5.50</td>\n",
              "      <td>51.40</td>\n",
              "      <td>5.61</td>\n",
              "      <td>64.50</td>\n",
              "      <td>16200</td>\n",
              "      <td>15.10</td>\n",
              "      <td>70.40</td>\n",
              "      <td>1.49</td>\n",
              "      <td>6030</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Belgium</td>\n",
              "      <td>4.50</td>\n",
              "      <td>76.40</td>\n",
              "      <td>10.70</td>\n",
              "      <td>74.70</td>\n",
              "      <td>41100</td>\n",
              "      <td>1.88</td>\n",
              "      <td>80.00</td>\n",
              "      <td>1.86</td>\n",
              "      <td>44400</td>\n",
              "      <td>good conditions achieved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Belize</td>\n",
              "      <td>18.80</td>\n",
              "      <td>58.20</td>\n",
              "      <td>5.20</td>\n",
              "      <td>57.50</td>\n",
              "      <td>7880</td>\n",
              "      <td>1.14</td>\n",
              "      <td>71.40</td>\n",
              "      <td>2.71</td>\n",
              "      <td>4340</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Benin</td>\n",
              "      <td>111.00</td>\n",
              "      <td>23.80</td>\n",
              "      <td>4.10</td>\n",
              "      <td>37.20</td>\n",
              "      <td>1820</td>\n",
              "      <td>0.89</td>\n",
              "      <td>61.80</td>\n",
              "      <td>5.36</td>\n",
              "      <td>758</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Bhutan</td>\n",
              "      <td>42.70</td>\n",
              "      <td>42.50</td>\n",
              "      <td>5.20</td>\n",
              "      <td>70.70</td>\n",
              "      <td>6420</td>\n",
              "      <td>5.99</td>\n",
              "      <td>72.10</td>\n",
              "      <td>2.38</td>\n",
              "      <td>2180</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Bolivia</td>\n",
              "      <td>46.60</td>\n",
              "      <td>41.20</td>\n",
              "      <td>4.84</td>\n",
              "      <td>34.30</td>\n",
              "      <td>5410</td>\n",
              "      <td>8.78</td>\n",
              "      <td>71.60</td>\n",
              "      <td>3.20</td>\n",
              "      <td>1980</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Bosnia and Herzegovina</td>\n",
              "      <td>6.90</td>\n",
              "      <td>29.70</td>\n",
              "      <td>11.10</td>\n",
              "      <td>51.30</td>\n",
              "      <td>9720</td>\n",
              "      <td>1.40</td>\n",
              "      <td>76.80</td>\n",
              "      <td>1.31</td>\n",
              "      <td>4610</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Botswana</td>\n",
              "      <td>52.50</td>\n",
              "      <td>43.60</td>\n",
              "      <td>8.30</td>\n",
              "      <td>51.30</td>\n",
              "      <td>13300</td>\n",
              "      <td>8.92</td>\n",
              "      <td>57.10</td>\n",
              "      <td>2.88</td>\n",
              "      <td>6350</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Brazil</td>\n",
              "      <td>19.80</td>\n",
              "      <td>10.70</td>\n",
              "      <td>9.01</td>\n",
              "      <td>11.80</td>\n",
              "      <td>14500</td>\n",
              "      <td>8.41</td>\n",
              "      <td>74.20</td>\n",
              "      <td>1.80</td>\n",
              "      <td>11200</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Brunei</td>\n",
              "      <td>10.50</td>\n",
              "      <td>67.40</td>\n",
              "      <td>2.84</td>\n",
              "      <td>28.00</td>\n",
              "      <td>80600</td>\n",
              "      <td>16.70</td>\n",
              "      <td>77.10</td>\n",
              "      <td>1.84</td>\n",
              "      <td>35300</td>\n",
              "      <td>good conditions achieved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Bulgaria</td>\n",
              "      <td>10.80</td>\n",
              "      <td>50.20</td>\n",
              "      <td>6.87</td>\n",
              "      <td>53.00</td>\n",
              "      <td>15300</td>\n",
              "      <td>1.11</td>\n",
              "      <td>73.90</td>\n",
              "      <td>1.57</td>\n",
              "      <td>6840</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Burkina Faso</td>\n",
              "      <td>116.00</td>\n",
              "      <td>19.20</td>\n",
              "      <td>6.74</td>\n",
              "      <td>29.60</td>\n",
              "      <td>1430</td>\n",
              "      <td>6.81</td>\n",
              "      <td>57.90</td>\n",
              "      <td>5.87</td>\n",
              "      <td>575</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Burundi</td>\n",
              "      <td>93.60</td>\n",
              "      <td>8.92</td>\n",
              "      <td>11.60</td>\n",
              "      <td>39.20</td>\n",
              "      <td>764</td>\n",
              "      <td>12.30</td>\n",
              "      <td>57.70</td>\n",
              "      <td>6.26</td>\n",
              "      <td>231</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Cambodia</td>\n",
              "      <td>44.40</td>\n",
              "      <td>54.10</td>\n",
              "      <td>5.68</td>\n",
              "      <td>59.50</td>\n",
              "      <td>2520</td>\n",
              "      <td>3.12</td>\n",
              "      <td>66.10</td>\n",
              "      <td>2.88</td>\n",
              "      <td>786</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Cameroon</td>\n",
              "      <td>108.00</td>\n",
              "      <td>22.20</td>\n",
              "      <td>5.13</td>\n",
              "      <td>27.00</td>\n",
              "      <td>2660</td>\n",
              "      <td>1.91</td>\n",
              "      <td>57.30</td>\n",
              "      <td>5.11</td>\n",
              "      <td>1310</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Canada</td>\n",
              "      <td>5.60</td>\n",
              "      <td>29.10</td>\n",
              "      <td>11.30</td>\n",
              "      <td>31.00</td>\n",
              "      <td>40700</td>\n",
              "      <td>2.87</td>\n",
              "      <td>81.30</td>\n",
              "      <td>1.63</td>\n",
              "      <td>47400</td>\n",
              "      <td>good conditions achieved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Cape Verde</td>\n",
              "      <td>26.50</td>\n",
              "      <td>32.70</td>\n",
              "      <td>4.09</td>\n",
              "      <td>61.80</td>\n",
              "      <td>5830</td>\n",
              "      <td>0.51</td>\n",
              "      <td>72.50</td>\n",
              "      <td>2.67</td>\n",
              "      <td>3310</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Central African Republic</td>\n",
              "      <td>149.00</td>\n",
              "      <td>11.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>26.50</td>\n",
              "      <td>888</td>\n",
              "      <td>2.01</td>\n",
              "      <td>47.50</td>\n",
              "      <td>5.21</td>\n",
              "      <td>446</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Chad</td>\n",
              "      <td>150.00</td>\n",
              "      <td>36.80</td>\n",
              "      <td>4.53</td>\n",
              "      <td>43.50</td>\n",
              "      <td>1930</td>\n",
              "      <td>6.39</td>\n",
              "      <td>56.50</td>\n",
              "      <td>6.59</td>\n",
              "      <td>897</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Chile</td>\n",
              "      <td>8.70</td>\n",
              "      <td>37.70</td>\n",
              "      <td>7.96</td>\n",
              "      <td>31.30</td>\n",
              "      <td>19400</td>\n",
              "      <td>8.96</td>\n",
              "      <td>79.10</td>\n",
              "      <td>1.88</td>\n",
              "      <td>12900</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>China</td>\n",
              "      <td>15.70</td>\n",
              "      <td>26.30</td>\n",
              "      <td>5.07</td>\n",
              "      <td>22.60</td>\n",
              "      <td>9530</td>\n",
              "      <td>6.94</td>\n",
              "      <td>74.60</td>\n",
              "      <td>1.59</td>\n",
              "      <td>4560</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Colombia</td>\n",
              "      <td>18.60</td>\n",
              "      <td>15.90</td>\n",
              "      <td>7.59</td>\n",
              "      <td>17.80</td>\n",
              "      <td>10900</td>\n",
              "      <td>3.86</td>\n",
              "      <td>76.40</td>\n",
              "      <td>2.01</td>\n",
              "      <td>6250</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Comoros</td>\n",
              "      <td>88.20</td>\n",
              "      <td>16.50</td>\n",
              "      <td>4.51</td>\n",
              "      <td>51.70</td>\n",
              "      <td>1410</td>\n",
              "      <td>3.87</td>\n",
              "      <td>65.90</td>\n",
              "      <td>4.75</td>\n",
              "      <td>769</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Congo, Dem. Rep.</td>\n",
              "      <td>116.00</td>\n",
              "      <td>41.10</td>\n",
              "      <td>7.91</td>\n",
              "      <td>49.60</td>\n",
              "      <td>609</td>\n",
              "      <td>20.80</td>\n",
              "      <td>57.50</td>\n",
              "      <td>6.54</td>\n",
              "      <td>334</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Congo, Rep.</td>\n",
              "      <td>63.90</td>\n",
              "      <td>85.10</td>\n",
              "      <td>2.46</td>\n",
              "      <td>54.70</td>\n",
              "      <td>5190</td>\n",
              "      <td>20.70</td>\n",
              "      <td>60.40</td>\n",
              "      <td>4.95</td>\n",
              "      <td>2740</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>10.20</td>\n",
              "      <td>33.20</td>\n",
              "      <td>10.90</td>\n",
              "      <td>35.00</td>\n",
              "      <td>13000</td>\n",
              "      <td>6.57</td>\n",
              "      <td>80.40</td>\n",
              "      <td>1.92</td>\n",
              "      <td>8200</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Cote d'Ivoire</td>\n",
              "      <td>111.00</td>\n",
              "      <td>50.60</td>\n",
              "      <td>5.30</td>\n",
              "      <td>43.30</td>\n",
              "      <td>2690</td>\n",
              "      <td>5.39</td>\n",
              "      <td>56.30</td>\n",
              "      <td>5.27</td>\n",
              "      <td>1220</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Croatia</td>\n",
              "      <td>5.50</td>\n",
              "      <td>37.60</td>\n",
              "      <td>7.76</td>\n",
              "      <td>38.10</td>\n",
              "      <td>20100</td>\n",
              "      <td>0.82</td>\n",
              "      <td>76.30</td>\n",
              "      <td>1.55</td>\n",
              "      <td>13500</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Cyprus</td>\n",
              "      <td>3.60</td>\n",
              "      <td>50.20</td>\n",
              "      <td>5.97</td>\n",
              "      <td>57.50</td>\n",
              "      <td>33900</td>\n",
              "      <td>2.01</td>\n",
              "      <td>79.90</td>\n",
              "      <td>1.42</td>\n",
              "      <td>30800</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Czech Republic</td>\n",
              "      <td>3.40</td>\n",
              "      <td>66.00</td>\n",
              "      <td>7.88</td>\n",
              "      <td>62.90</td>\n",
              "      <td>28300</td>\n",
              "      <td>-1.43</td>\n",
              "      <td>77.50</td>\n",
              "      <td>1.51</td>\n",
              "      <td>19800</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Denmark</td>\n",
              "      <td>4.10</td>\n",
              "      <td>50.50</td>\n",
              "      <td>11.40</td>\n",
              "      <td>43.60</td>\n",
              "      <td>44000</td>\n",
              "      <td>3.22</td>\n",
              "      <td>79.50</td>\n",
              "      <td>1.87</td>\n",
              "      <td>58000</td>\n",
              "      <td>good conditions achieved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>34.40</td>\n",
              "      <td>22.70</td>\n",
              "      <td>6.22</td>\n",
              "      <td>33.30</td>\n",
              "      <td>11100</td>\n",
              "      <td>5.44</td>\n",
              "      <td>74.60</td>\n",
              "      <td>2.60</td>\n",
              "      <td>5450</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Ecuador</td>\n",
              "      <td>25.10</td>\n",
              "      <td>27.90</td>\n",
              "      <td>8.06</td>\n",
              "      <td>32.40</td>\n",
              "      <td>9350</td>\n",
              "      <td>7.47</td>\n",
              "      <td>76.70</td>\n",
              "      <td>2.66</td>\n",
              "      <td>4660</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Egypt</td>\n",
              "      <td>29.10</td>\n",
              "      <td>21.30</td>\n",
              "      <td>4.66</td>\n",
              "      <td>26.60</td>\n",
              "      <td>9860</td>\n",
              "      <td>10.10</td>\n",
              "      <td>70.50</td>\n",
              "      <td>3.19</td>\n",
              "      <td>2600</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>El Salvador</td>\n",
              "      <td>19.20</td>\n",
              "      <td>26.90</td>\n",
              "      <td>6.91</td>\n",
              "      <td>46.60</td>\n",
              "      <td>7300</td>\n",
              "      <td>2.65</td>\n",
              "      <td>74.10</td>\n",
              "      <td>2.27</td>\n",
              "      <td>2990</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Equatorial Guinea</td>\n",
              "      <td>111.00</td>\n",
              "      <td>85.80</td>\n",
              "      <td>4.48</td>\n",
              "      <td>58.90</td>\n",
              "      <td>33700</td>\n",
              "      <td>24.90</td>\n",
              "      <td>60.90</td>\n",
              "      <td>5.21</td>\n",
              "      <td>17100</td>\n",
              "      <td>immediate attention required</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Eritrea</td>\n",
              "      <td>55.20</td>\n",
              "      <td>4.79</td>\n",
              "      <td>2.66</td>\n",
              "      <td>23.30</td>\n",
              "      <td>1420</td>\n",
              "      <td>11.60</td>\n",
              "      <td>61.70</td>\n",
              "      <td>4.61</td>\n",
              "      <td>482</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Estonia</td>\n",
              "      <td>4.50</td>\n",
              "      <td>75.10</td>\n",
              "      <td>6.03</td>\n",
              "      <td>68.70</td>\n",
              "      <td>22700</td>\n",
              "      <td>1.74</td>\n",
              "      <td>76.00</td>\n",
              "      <td>1.72</td>\n",
              "      <td>14600</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Fiji</td>\n",
              "      <td>24.10</td>\n",
              "      <td>57.80</td>\n",
              "      <td>4.86</td>\n",
              "      <td>63.90</td>\n",
              "      <td>7350</td>\n",
              "      <td>4.23</td>\n",
              "      <td>65.30</td>\n",
              "      <td>2.67</td>\n",
              "      <td>3650</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Finland</td>\n",
              "      <td>3.00</td>\n",
              "      <td>38.70</td>\n",
              "      <td>8.95</td>\n",
              "      <td>37.40</td>\n",
              "      <td>39800</td>\n",
              "      <td>0.35</td>\n",
              "      <td>80.00</td>\n",
              "      <td>1.87</td>\n",
              "      <td>46200</td>\n",
              "      <td>good conditions achieved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>France</td>\n",
              "      <td>4.20</td>\n",
              "      <td>26.80</td>\n",
              "      <td>11.90</td>\n",
              "      <td>28.10</td>\n",
              "      <td>36900</td>\n",
              "      <td>1.05</td>\n",
              "      <td>81.40</td>\n",
              "      <td>2.03</td>\n",
              "      <td>40600</td>\n",
              "      <td>assistance may be needed</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04cb0735-e1ea-4dcb-94a0-961cae518b04')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-04cb0735-e1ea-4dcb-94a0-961cae518b04 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-04cb0735-e1ea-4dcb-94a0-961cae518b04');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7edc2add-5f9f-41c5-891a-90a81c1168cf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7edc2add-5f9f-41c5-891a-90a81c1168cf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7edc2add-5f9f-41c5-891a-90a81c1168cf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "finaldf",
              "summary": "{\n  \"name\": \"finaldf\",\n  \"rows\": 167,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 167,\n        \"samples\": [\n          \"Micronesia, Fed. Sts.\",\n          \"Namibia\",\n          \"Jordan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"child_mort\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.32893145927617,\n        \"min\": 2.6,\n        \"max\": 208.0,\n        \"num_unique_values\": 139,\n        \"samples\": [\n          17.1,\n          36.9,\n          149.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.41201011142416,\n        \"min\": 0.109,\n        \"max\": 200.0,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          28.6,\n          57.8,\n          20.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"health\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7468374978890795,\n        \"min\": 1.81,\n        \"max\": 17.9,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          9.54,\n          8.95,\n          3.66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imports\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24.209588976108698,\n        \"min\": 0.0659,\n        \"max\": 174.0,\n        \"num_unique_values\": 151,\n        \"samples\": [\n          79.9,\n          70.7,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19278,\n        \"min\": 609,\n        \"max\": 125000,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          7710,\n          17400,\n          18300\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"inflation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.570703901430559,\n        \"min\": -4.21,\n        \"max\": 104.0,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          3.8,\n          -3.22,\n          0.238\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"life_expec\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.893171908900408,\n        \"min\": 32.1,\n        \"max\": 82.8,\n        \"num_unique_values\": 127,\n        \"samples\": [\n          57.3,\n          81.5,\n          68.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_fer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5138475432630463,\n        \"min\": 1.15,\n        \"max\": 7.49,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          1.27,\n          3.16,\n          2.33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gdpp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18328,\n        \"min\": 231,\n        \"max\": 105000,\n        \"num_unique_values\": 157,\n        \"samples\": [\n          10800,\n          4660,\n          22100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"immediate attention required\",\n          \"assistance may be needed\",\n          \"good conditions achieved\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "> Last but not least, the country-clustering-based-on-help-urgency-levels (long name, yes) is now shown in a more visually pleasing way."
      ],
      "metadata": {
        "id": "nFGygis6_7Jv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "finaldf['Cluster'].loc[finaldf['Cluster'] == 0] = 'Immediate Attention Required'\n",
        "finaldf['Cluster'].loc[finaldf['Cluster'] == 1] = 'Assistance May Be Needed'\n",
        "finaldf['Cluster'].loc[finaldf['Cluster'] == 2] = 'Good Conditions Achieved'\n",
        "\n",
        "fig = px.choropleth(df1[['Country','Cluster']],\n",
        "                    locationmode = 'country names',\n",
        "                    locations = 'Country',\n",
        "                    title = 'Country Urgency Conditions',\n",
        "                    color = finaldf['Cluster'],\n",
        "                    color_discrete_map = {'Immediate Attention Required':'#CC1414','Assistance May Be Needed':'#F0E32E','Good Conditions Achieved':'#54F02E',}\n",
        "                   )\n",
        "fig.update_geos(fitbounds = \"locations\", visible = True)\n",
        "fig.update_layout(legend_title_text = 'Labels',legend_title_side = 'top',title_pad_l = 260,title_y = 0.86)\n",
        "fig.show(engine = 'kaleido')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "e9zi7uYwgAob",
        "outputId": "626bacf0-5620-4c8b-adfa-bf2bc433119f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"f7274e3a-e0e0-4fba-aaf9-2b90068db742\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f7274e3a-e0e0-4fba-aaf9-2b90068db742\")) {                    Plotly.newPlot(                        \"f7274e3a-e0e0-4fba-aaf9-2b90068db742\",                        [{\"colorscale\":[[0.0,\"#ab63fa\"],[1.0,\"#ab63fa\"]],\"geo\":\"geo\",\"hovertemplate\":\"color=immediate attention required\\u003cbr\\u003eCountry=%{location}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"locationmode\":\"country names\",\"locations\":[\"Afghanistan\",\"Angola\",\"Benin\",\"Burkina Faso\",\"Burundi\",\"Cameroon\",\"Central African Republic\",\"Chad\",\"Comoros\",\"Congo, Dem. Rep.\",\"Cote d'Ivoire\",\"Equatorial Guinea\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Haiti\",\"Kiribati\",\"Lesotho\",\"Liberia\",\"Malawi\",\"Mali\",\"Mauritania\",\"Micronesia, Fed. Sts.\",\"Mozambique\",\"Niger\",\"Pakistan\",\"Rwanda\",\"Senegal\",\"Sierra Leone\",\"Sudan\",\"Tanzania\",\"Timor-Leste\",\"Togo\",\"Uganda\",\"Zambia\"],\"name\":\"immediate attention required\",\"showlegend\":true,\"showscale\":false,\"z\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"type\":\"choropleth\"},{\"colorscale\":[[0.0,\"#FFA15A\"],[1.0,\"#FFA15A\"]],\"geo\":\"geo\",\"hovertemplate\":\"color=assistance may be needed\\u003cbr\\u003eCountry=%{location}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"locationmode\":\"country names\",\"locations\":[\"Albania\",\"Algeria\",\"Antigua and Barbuda\",\"Argentina\",\"Armenia\",\"Azerbaijan\",\"Bahamas\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belize\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Cambodia\",\"Cape Verde\",\"Chile\",\"China\",\"Colombia\",\"Congo, Rep.\",\"Costa Rica\",\"Croatia\",\"Cyprus\",\"Czech Republic\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Eritrea\",\"Estonia\",\"Fiji\",\"France\",\"Gabon\",\"Georgia\",\"Greece\",\"Grenada\",\"Guatemala\",\"Guyana\",\"Hungary\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kyrgyz Republic\",\"Lao\",\"Latvia\",\"Lebanon\",\"Libya\",\"Lithuania\",\"Macedonia, FYR\",\"Madagascar\",\"Malaysia\",\"Maldives\",\"Mauritius\",\"Moldova\",\"Montenegro\",\"Morocco\",\"Myanmar\",\"Namibia\",\"Nepal\",\"New Zealand\",\"Panama\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Romania\",\"Russia\",\"Samoa\",\"Serbia\",\"Seychelles\",\"Slovak Republic\",\"Slovenia\",\"Solomon Islands\",\"South Africa\",\"South Korea\",\"Spain\",\"Sri Lanka\",\"St. Vincent and the Grenadines\",\"Suriname\",\"Tajikistan\",\"Thailand\",\"Tonga\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Ukraine\",\"United Kingdom\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vietnam\",\"Yemen\"],\"name\":\"assistance may be needed\",\"showlegend\":true,\"showscale\":false,\"z\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"type\":\"choropleth\"},{\"colorscale\":[[0.0,\"#19d3f3\"],[1.0,\"#19d3f3\"]],\"geo\":\"geo\",\"hovertemplate\":\"color=good conditions achieved\\u003cbr\\u003eCountry=%{location}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"locationmode\":\"country names\",\"locations\":[\"Australia\",\"Austria\",\"Bahrain\",\"Belgium\",\"Brunei\",\"Canada\",\"Denmark\",\"Finland\",\"Germany\",\"Iceland\",\"Ireland\",\"Kuwait\",\"Luxembourg\",\"Malta\",\"Mongolia\",\"Netherlands\",\"Nigeria\",\"Norway\",\"Oman\",\"Qatar\",\"Saudi Arabia\",\"Singapore\",\"Sweden\",\"Switzerland\",\"United Arab Emirates\",\"United States\",\"Venezuela\"],\"name\":\"good conditions achieved\",\"showlegend\":true,\"showscale\":false,\"z\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"geo\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"center\":{},\"fitbounds\":\"locations\",\"visible\":true},\"legend\":{\"title\":{\"text\":\"Labels\",\"side\":\"top\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Country Urgency Conditions\",\"pad\":{\"l\":260},\"y\":0.86}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('f7274e3a-e0e0-4fba-aaf9-2b90068db742');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
